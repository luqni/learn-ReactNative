{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"lodash","data":{"isAsync":false}},{"name":"color","data":{"isAsync":false}},{"name":"./extractOpacity","data":{"isAsync":false}},{"name":"./extractTransform","data":{"isAsync":false}},{"name":"../units","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _default;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _$$_REQUIRE(_dependencyMap[3], \"react\");\n\n  var _lodash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"lodash\"));\n\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"color\"));\n\n  var _extractOpacity = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./extractOpacity\"));\n\n  var _extractTransform = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./extractTransform\"));\n\n  var _units = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../units\"));\n\n  var percentReg = /^([+\\-]?\\d+(?:\\.\\d+)?(?:[eE][+\\-]?\\d+)?)(%?)$/;\n\n  function percentToFloat(percent) {\n    var matched = percent.match(percentReg);\n\n    if (!matched) {\n      console.warn(\"`\" + percent + \"` is not a valid number or percentage string.\");\n      return 0;\n    }\n\n    return matched[2] ? matched[1] / 100 : +matched[1];\n  }\n\n  function _default(props) {\n    if (!props.id) {\n      return null;\n    }\n\n    var stops = {};\n\n    _react.Children.forEach(props.children, function (child) {\n      if (child.props.stopColor && child.props.offset) {\n        var offset = percentToFloat(child.props.offset);\n        stops[offset] = (0, _color.default)(child.props.stopColor).alpha((0, _extractOpacity.default)(child.props.stopOpacity));\n      }\n    });\n\n    var sorted = _lodash.default.sortBy(_lodash.default.map(stops, function (stop, offset) {\n      return {\n        stop: stop,\n        offset: offset\n      };\n    }), \"offset\");\n\n    var gradient = [];\n    sorted.forEach(function (_ref) {\n      var stop = _ref.stop;\n\n      var _stop$rgb$array = stop.rgb().array(),\n          _stop$rgb$array2 = (0, _slicedToArray2.default)(_stop$rgb$array, 4),\n          r = _stop$rgb$array2[0],\n          g = _stop$rgb$array2[1],\n          b = _stop$rgb$array2[2],\n          _stop$rgb$array2$ = _stop$rgb$array2[3],\n          a = _stop$rgb$array2$ === void 0 ? 1 : _stop$rgb$array2$;\n\n      gradient.push(r / 255);\n      gradient.push(g / 255);\n      gradient.push(b / 255);\n      gradient.push(a);\n    });\n    gradient.push.apply(gradient, (0, _toConsumableArray2.default)(sorted.map(function (_ref2) {\n      var offset = _ref2.offset;\n      return +offset;\n    })));\n    var gradientTransform;\n\n    if (props.gradientTransform) {\n      gradientTransform = (0, _extractTransform.default)(props.gradientTransform);\n    } else if (props.transform) {\n      gradientTransform = (0, _extractTransform.default)(props.transform);\n    } else {\n      gradientTransform = (0, _extractTransform.default)(props);\n    }\n\n    return {\n      gradient: gradient,\n      name: props.id,\n      gradientTransform: gradientTransform,\n      gradientUnits: _units.default[props.gradientUnits] || 0\n    };\n  }\n});","map":[[13,0,1,0],[15,0,2,0],[17,0,3,0],[19,0,5,0],[21,0,6,0],[23,0,7,0],[25,0,9,0],[25,6,9,6,"percentReg"],[25,16,9,16],[25,19,9,19],[25,66,9,0],[27,0,11,0],[27,11,11,9,"percentToFloat"],[27,25,11,0],[27,26,11,24,"percent"],[27,33,11,0],[27,35,11,33],[28,0,12,4],[28,8,12,10,"matched"],[28,15,12,17],[28,18,12,20,"percent"],[28,25,12,27],[28,26,12,28,"match"],[28,31,12,20],[28,32,12,34,"percentReg"],[28,42,12,20],[28,43,12,4],[30,0,13,4],[30,8,13,8],[30,9,13,9,"matched"],[30,16,13,4],[30,18,13,18],[31,0,14,8,"console"],[31,6,14,8,"console"],[31,13,14,15],[31,14,14,16,"warn"],[31,18,14,8],[31,25,15,17,"percent"],[31,32,14,8],[32,0,17,8],[32,13,17,15],[32,14,17,8],[33,0,18,5],[35,0,20,4],[35,11,20,11,"matched"],[35,18,20,18],[35,19,20,19],[35,20,20,18],[35,21,20,11],[35,24,20,24,"matched"],[35,31,20,31],[35,32,20,32],[35,33,20,31],[35,34,20,24],[35,37,20,37],[35,40,20,11],[35,43,20,43],[35,44,20,44,"matched"],[35,51,20,51],[35,52,20,52],[35,53,20,51],[35,54,20,4],[36,0,21,1],[38,0,23,15],[38,20,23,24,"props"],[38,25,23,15],[38,27,23,31],[39,0,24,4],[39,8,24,8],[39,9,24,9,"props"],[39,14,24,14],[39,15,24,15,"id"],[39,17,24,4],[39,19,24,19],[40,0,25,8],[40,13,25,15],[40,17,25,8],[41,0,26,5],[43,0,28,4],[43,8,28,10,"stops"],[43,13,28,15],[43,16,28,18],[43,18,28,4],[45,0,29,4,"Children"],[45,20,29,13,"forEach"],[45,27,29,4],[45,28,29,21,"props"],[45,33,29,26],[45,34,29,27,"children"],[45,42,29,4],[45,44,29,37],[45,54,29,37,"child"],[45,59,29,42],[45,61,29,46],[46,0,30,8],[46,10,30,12,"child"],[46,15,30,17],[46,16,30,18,"props"],[46,21,30,12],[46,22,30,24,"stopColor"],[46,31,30,12],[46,35,30,37,"child"],[46,40,30,42],[46,41,30,43,"props"],[46,46,30,37],[46,47,30,49,"offset"],[46,53,30,8],[46,55,30,57],[47,0,32,12],[47,12,32,18,"offset"],[47,18,32,24],[47,21,32,27,"percentToFloat"],[47,35,32,41],[47,36,32,42,"child"],[47,41,32,47],[47,42,32,48,"props"],[47,47,32,42],[47,48,32,54,"offset"],[47,54,32,41],[47,55,32,12],[48,0,36,12,"stops"],[48,8,36,12,"stops"],[48,13,36,17],[48,14,36,18,"offset"],[48,20,36,17],[48,21,36,12],[48,24,36,28],[48,44,36,34,"child"],[48,49,36,39],[48,50,36,40,"props"],[48,55,36,34],[48,56,36,46,"stopColor"],[48,65,36,28],[48,67,36,57,"alpha"],[48,72,36,28],[48,73,37,16],[48,102,37,31,"child"],[48,107,37,36],[48,108,37,37,"props"],[48,113,37,31],[48,114,37,43,"stopOpacity"],[48,125,37,16],[48,126,36,28],[48,127,36,12],[49,0,39,9],[50,0,40,5],[50,5,29,4],[52,0,42,4],[52,8,42,10,"sorted"],[52,14,42,16],[52,17,42,19,"_"],[52,33,42,21,"sortBy"],[52,39,42,19],[52,40,43,8,"_"],[52,56,43,10,"map"],[52,59,43,8],[52,60,43,14,"stops"],[52,65,43,8],[52,67,43,21],[52,77,43,22,"stop"],[52,81,43,21],[52,83,43,28,"offset"],[52,89,43,21],[52,91,43,39],[53,0,44,12],[53,13,44,19],[54,0,44,21,"stop"],[54,8,44,21,"stop"],[54,12,44,25],[54,14,44,21,"stop"],[54,18,44,19],[55,0,44,27,"offset"],[55,8,44,27,"offset"],[55,14,44,33],[55,16,44,27,"offset"],[56,0,44,19],[56,7,44,12],[57,0,45,9],[57,5,43,8],[57,6,42,19],[57,8,46,8],[57,16,42,19],[57,17,42,4],[59,0,49,4],[59,8,49,10,"gradient"],[59,16,49,18],[59,19,49,21],[59,21,49,4],[60,0,51,4,"sorted"],[60,4,51,4,"sorted"],[60,10,51,10],[60,11,51,11,"forEach"],[60,18,51,4],[60,19,51,19],[60,35,51,33],[61,0,51,33],[61,10,51,22,"stop"],[61,14,51,33],[61,22,51,22,"stop"],[61,26,51,33],[63,0,51,33],[63,28,52,33,"stop"],[63,32,52,37],[63,33,52,38,"rgb"],[63,36,52,33],[63,39,52,44,"array"],[63,44,52,33],[63,46,51,33],[64,0,51,33],[65,0,51,33],[65,10,52,15,"r"],[65,11,51,33],[66,0,51,33],[66,10,52,18,"g"],[66,11,51,33],[67,0,51,33],[67,10,52,21,"b"],[67,11,51,33],[68,0,51,33],[69,0,51,33],[69,10,52,24,"a"],[69,11,51,33],[69,45,52,28],[69,46,51,33],[71,0,53,8,"gradient"],[71,6,53,8,"gradient"],[71,14,53,16],[71,15,53,17,"push"],[71,19,53,8],[71,20,53,22,"r"],[71,21,53,23],[71,24,53,26],[71,27,53,8],[72,0,54,8,"gradient"],[72,6,54,8,"gradient"],[72,14,54,16],[72,15,54,17,"push"],[72,19,54,8],[72,20,54,22,"g"],[72,21,54,23],[72,24,54,26],[72,27,54,8],[73,0,55,8,"gradient"],[73,6,55,8,"gradient"],[73,14,55,16],[73,15,55,17,"push"],[73,19,55,8],[73,20,55,22,"b"],[73,21,55,23],[73,24,55,26],[73,27,55,8],[74,0,56,8,"gradient"],[74,6,56,8,"gradient"],[74,14,56,16],[74,15,56,17,"push"],[74,19,56,8],[74,20,56,22,"a"],[74,21,56,8],[75,0,57,5],[75,5,51,4],[76,0,59,4,"gradient"],[76,4,59,4,"gradient"],[76,12,59,12],[76,13,59,13,"push"],[76,17,59,4],[76,24,59,4,"gradient"],[76,32,59,12],[76,67,59,21,"sorted"],[76,73,59,27],[76,74,59,28,"map"],[76,77,59,21],[76,78,59,32],[77,0,59,32],[77,10,59,35,"offset"],[77,16,59,32],[77,25,59,35,"offset"],[77,31,59,32],[78,0,59,32],[78,13,59,48],[78,14,59,49,"offset"],[78,20,59,32],[79,0,59,32],[79,5,59,21],[79,6,59,12],[79,8,59,4],[80,0,61,4],[80,8,61,8,"gradientTransform"],[80,25,61,4],[82,0,62,4],[82,8,62,8,"props"],[82,13,62,13],[82,14,62,14,"gradientTransform"],[82,31,62,4],[82,33,62,33],[83,0,63,8,"gradientTransform"],[83,6,63,8,"gradientTransform"],[83,23,63,25],[83,26,63,28],[83,57,63,45,"props"],[83,62,63,50],[83,63,63,51,"gradientTransform"],[83,80,63,28],[83,81,63,8],[84,0,64,5],[84,5,62,4],[84,11,64,11],[84,15,64,15,"props"],[84,20,64,20],[84,21,64,21,"transform"],[84,30,64,11],[84,32,64,32],[85,0,65,8,"gradientTransform"],[85,6,65,8,"gradientTransform"],[85,23,65,25],[85,26,65,28],[85,57,65,45,"props"],[85,62,65,50],[85,63,65,51,"transform"],[85,72,65,28],[85,73,65,8],[86,0,66,5],[86,5,64,11],[86,11,66,11],[87,0,67,8,"gradientTransform"],[87,6,67,8,"gradientTransform"],[87,23,67,25],[87,26,67,28],[87,57,67,45,"props"],[87,62,67,28],[87,63,67,8],[88,0,68,5],[90,0,70,4],[90,11,70,11],[91,0,71,8,"gradient"],[91,6,71,8,"gradient"],[91,14,71,16],[91,16,71,8,"gradient"],[91,24,70,11],[92,0,72,8,"name"],[92,6,72,8,"name"],[92,10,72,12],[92,12,72,14,"props"],[92,17,72,19],[92,18,72,20,"id"],[92,20,70,11],[93,0,73,8,"gradientTransform"],[93,6,73,8,"gradientTransform"],[93,23,73,25],[93,25,73,8,"gradientTransform"],[93,42,70,11],[94,0,74,8,"gradientUnits"],[94,6,74,8,"gradientUnits"],[94,19,74,21],[94,21,74,23,"units"],[94,36,74,29,"props"],[94,41,74,34],[94,42,74,35,"gradientUnits"],[94,55,74,23],[94,60,74,53],[95,0,70,11],[95,5,70,4],[96,0,76,1]]},"type":"js/module"}]}