{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"../../core/theming","data":{"isAsync":false}},{"name":"color","data":{"isAsync":false}},{"name":"../IconButton","data":{"isAsync":false}},{"name":"./ToggleButtonGroup","data":{"isAsync":false}},{"name":"../../styles/colors","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/inherits\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./../../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _theming = _$$_REQUIRE(_dependencyMap[12], \"../../core/theming\");\n\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"color\"));\n\n  var _IconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"../IconButton\"));\n\n  var _ToggleButtonGroup = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[15], \"./ToggleButtonGroup\"));\n\n  var _colors = _$$_REQUIRE(_dependencyMap[16], \"../../styles/colors\");\n\n  var _jsxFileName = \"/home/root21/Bootcamp/Course_ReactNative/react1/node_modules/react-native-paper/src/components/ToggleButton/ToggleButton.js\";\n  var _components = {\n    ToggleButton: {\n      displayName: \"ToggleButton\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/root21/Bootcamp/Course_ReactNative/react1/node_modules/react-native-paper/src/components/ToggleButton/ToggleButton.js\",\n    components: _components,\n    locals: [module],\n    imports: [React.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var ToggleButton = function (_React$Component) {\n    (0, _inherits2.default)(ToggleButton, _React$Component);\n\n    function ToggleButton() {\n      (0, _classCallCheck2.default)(this, ToggleButton);\n      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToggleButton).apply(this, arguments));\n    }\n\n    (0, _createClass2.default)(ToggleButton, [{\n      key: \"render\",\n      value: function render() {\n        var _this = this;\n\n        var _this$props = this.props,\n            icon = _this$props.icon,\n            size = _this$props.size,\n            theme = _this$props.theme,\n            accessibilityLabel = _this$props.accessibilityLabel,\n            disabled = _this$props.disabled,\n            style = _this$props.style,\n            value = _this$props.value,\n            status = _this$props.status,\n            rest = (0, _objectWithoutProperties2.default)(_this$props, [\"icon\", \"size\", \"theme\", \"accessibilityLabel\", \"disabled\", \"style\", \"value\", \"status\"]);\n        var borderRadius = theme.roundness;\n        return React.createElement(_ToggleButtonGroup.ToggleButtonGroupContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          }\n        }, function (context) {\n          var backgroundColor;\n          var checked = context && context.value === value || status === 'checked';\n\n          if (checked) {\n            backgroundColor = theme.dark ? 'rgba(255, 255, 255, .12)' : 'rgba(0, 0, 0, .08)';\n          } else {\n            backgroundColor = 'transparent';\n          }\n\n          return React.createElement(_IconButton.default, (0, _extends2.default)({\n            borderless: false,\n            icon: icon,\n            onPress: function onPress() {\n              if (_this.props.onPress) {\n                _this.props.onPress(status);\n              }\n\n              if (context) {\n                context.onValueChange(!checked ? value : null);\n              }\n            },\n            size: size,\n            accessibilityLabel: accessibilityLabel,\n            disabled: disabled,\n            style: [styles.content, {\n              backgroundColor: backgroundColor,\n              borderRadius: borderRadius,\n              borderColor: (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.29).rgb().string()\n            }, style]\n          }, rest, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            }\n          }));\n        });\n      }\n    }]);\n    return ToggleButton;\n  }(React.Component);\n\n  ToggleButton.Group = _ToggleButtonGroup.default;\n  ToggleButton = _wrapComponent(\"ToggleButton\")(ToggleButton);\n\n  var styles = _reactNative.StyleSheet.create({\n    content: {\n      width: 42,\n      height: 42,\n      margin: 0\n    }\n  });\n\n  var _default2 = (0, _theming.withTheme)(ToggleButton);\n\n  exports.default = _default2;\n});","map":[[25,0,3,0],[29,0,4,0],[31,0,5,0],[33,0,6,0],[35,0,7,0],[37,0,8,0],[39,0,11,0],[61,6,90,6,"ToggleButton"],[61,18],[71,31,94,11],[72,0,94,11],[74,0,94,11],[74,26,105,8],[74,31,105,13,"props"],[74,36,94,11],[75,0,94,11],[75,12,96,6,"icon"],[75,16,94,11],[75,31,96,6,"icon"],[75,35,94,11],[76,0,94,11],[76,12,97,6,"size"],[76,16,94,11],[76,31,97,6,"size"],[76,35,94,11],[77,0,94,11],[77,12,98,6,"theme"],[77,17,94,11],[77,32,98,6,"theme"],[77,37,94,11],[78,0,94,11],[78,12,99,6,"accessibilityLabel"],[78,30,94,11],[78,45,99,6,"accessibilityLabel"],[78,63,94,11],[79,0,94,11],[79,12,100,6,"disabled"],[79,20,94,11],[79,35,100,6,"disabled"],[79,43,94,11],[80,0,94,11],[80,12,101,6,"style"],[80,17,94,11],[80,32,101,6,"style"],[80,37,94,11],[81,0,94,11],[81,12,102,6,"value"],[81,17,94,11],[81,32,102,6,"value"],[81,37,94,11],[82,0,94,11],[82,12,103,6,"status"],[82,18,94,11],[82,33,103,6,"status"],[82,39,94,11],[83,0,94,11],[83,12,104,9,"rest"],[83,16,94,11],[84,0,106,4],[84,12,106,10,"borderRadius"],[84,24,106,22],[84,27,106,25,"theme"],[84,32,106,30],[84,33,106,31,"roundness"],[84,42,106,4],[85,0,108,4],[85,15,109,6],[85,35,109,7],[85,78,109,6],[85,79,109,32],[85,87,109,6],[86,0,109,6],[87,0,109,6],[88,0,109,6],[89,0,109,6],[90,0,109,6],[90,11,110,9],[90,21,110,10,"context"],[90,28,110,9],[90,30,110,67],[91,0,111,10],[91,14,111,14,"backgroundColor"],[91,29,111,10],[92,0,113,10],[92,14,113,16,"checked"],[92,21,113,33],[92,24,114,13,"context"],[92,31,114,20],[92,35,114,24,"context"],[92,42,114,31],[92,43,114,32,"value"],[92,48,114,24],[92,53,114,42,"value"],[92,58,114,12],[92,62,114,52,"status"],[92,68,114,58],[92,73,114,63],[92,82,113,10],[94,0,116,10],[94,14,116,14,"checked"],[94,21,116,10],[94,23,116,23],[95,0,117,12,"backgroundColor"],[95,12,117,12,"backgroundColor"],[95,27,117,27],[95,30,117,30,"theme"],[95,35,117,35],[95,36,117,36,"dark"],[95,40,117,30],[95,43,118,16],[95,69,117,30],[95,72,119,16],[95,92,117,12],[96,0,120,11],[96,11,116,10],[96,17,120,17],[97,0,121,12,"backgroundColor"],[97,12,121,12,"backgroundColor"],[97,27,121,27],[97,30,121,30],[97,43,121,12],[98,0,122,11],[100,0,124,10],[100,17,125,12],[100,37,125,13],[100,56,125,12],[101,0,126,14],[101,12,126,14],[101,22,126,24],[101,24,126,26],[101,29,125,12],[102,0,127,14],[102,12,127,14],[102,16,127,18],[102,18,127,20,"icon"],[102,22,125,12],[103,0,128,14],[103,12,128,14],[103,19,128,21],[103,21,128,23],[103,40,128,29],[104,0,129,16],[104,18,129,20],[104,23,129,24],[104,24,129,25,"props"],[104,29,129,20],[104,30,129,31,"onPress"],[104,37,129,16],[104,39,129,40],[105,0,130,18],[105,16,130,18],[105,21,130,22],[105,22,130,23,"props"],[105,27,130,18],[105,28,130,29,"onPress"],[105,35,130,18],[105,36,130,37,"status"],[105,42,130,18],[106,0,131,17],[108,0,133,16],[108,18,133,20,"context"],[108,25,133,16],[108,27,133,29],[109,0,134,18,"context"],[109,16,134,18,"context"],[109,23,134,25],[109,24,134,26,"onValueChange"],[109,37,134,18],[109,38,134,40],[109,39,134,41,"checked"],[109,46,134,40],[109,49,134,51,"value"],[109,54,134,40],[109,57,134,59],[109,61,134,18],[110,0,135,17],[111,0,136,15],[111,13,125,12],[112,0,137,14],[112,12,137,14],[112,16,137,18],[112,18,137,20,"size"],[112,22,125,12],[113,0,138,14],[113,12,138,14],[113,30,138,32],[113,32,138,34,"accessibilityLabel"],[113,50,125,12],[114,0,139,14],[114,12,139,14],[114,20,139,22],[114,22,139,24,"disabled"],[114,30,125,12],[115,0,140,14],[115,12,140,14],[115,17,140,19],[115,19,140,21],[115,20,141,16,"styles"],[115,26,141,22],[115,27,141,23,"content"],[115,34,140,21],[115,36,142,16],[116,0,143,18,"backgroundColor"],[116,14,143,18,"backgroundColor"],[116,29,143,33],[116,31,143,18,"backgroundColor"],[116,46,142,16],[117,0,144,18,"borderRadius"],[117,14,144,18,"borderRadius"],[117,26,144,30],[117,28,144,18,"borderRadius"],[117,40,142,16],[118,0,145,18,"borderColor"],[118,14,145,18,"borderColor"],[118,25,145,29],[118,27,145,31],[118,47,145,37,"theme"],[118,52,145,42],[118,53,145,43,"dark"],[118,57,145,37],[118,60,145,50,"white"],[118,73,145,37],[118,76,145,58,"black"],[118,89,145,31],[118,91,146,21,"alpha"],[118,96,145,31],[118,97,146,27],[118,101,145,31],[118,103,147,21,"rgb"],[118,106,145,31],[118,109,148,21,"string"],[118,115,145,31],[119,0,142,16],[119,13,140,21],[119,15,150,16,"style"],[119,20,140,21],[120,0,125,12],[120,13,152,18,"rest"],[120,17,125,12],[121,0,125,12],[122,0,125,12],[123,0,125,12],[124,0,125,12],[125,0,125,12],[125,13,124,10],[126,0,155,9],[126,9,109,6],[126,10,108,4],[127,0,158,3],[130,4,90,27,"React"],[130,9,90,32],[130,10,90,33,"Component"],[130,19],[132,0,90,6,"ToggleButton"],[132,2,90,6,"ToggleButton"],[132,14],[132,15,92,9,"Group"],[132,20],[132,23,92,17,"ToggleButtonGroup"],[132,49],[135,0,161,0],[135,6,161,6,"styles"],[135,12,161,12],[135,15,161,15,"StyleSheet"],[135,39,161,26,"create"],[135,45,161,15],[135,46,161,33],[136,0,162,2,"content"],[136,4,162,2,"content"],[136,11,162,9],[136,13,162,11],[137,0,163,4,"width"],[137,6,163,4,"width"],[137,11,163,9],[137,13,163,11],[137,15,162,11],[138,0,164,4,"height"],[138,6,164,4,"height"],[138,12,164,10],[138,14,164,12],[138,16,162,11],[139,0,165,4,"margin"],[139,6,165,4,"margin"],[139,12,165,10],[139,14,165,12],[140,0,162,11],[141,0,161,33],[141,3,161,15],[141,4,161,0],[143,18,169,15],[143,42,169,25,"ToggleButton"],[143,54,169,15],[143,55]]},"type":"js/module"}]}