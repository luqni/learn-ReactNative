{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"./RemoteLogging","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _RemoteLogging = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./RemoteLogging\"));\n\n  function createRemoteConsole(originalConsole) {\n    var groupDepth = 0;\n    var enhancedConsole = Object.create(originalConsole);\n\n    _defineConsoleLogMethod('debug', 'info');\n\n    _defineConsoleLogMethod('log', 'info');\n\n    _defineConsoleLogMethod('info', 'info');\n\n    _defineConsoleLogMethod('warn', 'warn');\n\n    _defineConsoleLogMethod('error', 'error');\n\n    enhancedConsole.assert = function assert(condition) {\n      for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        data[_key - 1] = arguments[_key];\n      }\n\n      if (originalConsole.assert) {\n        originalConsole.assert.apply(originalConsole, [!!condition].concat(data));\n      }\n\n      if (condition) {\n        return;\n      }\n\n      var assertionMessage = 'Assertion failed';\n\n      if (!data.length) {\n        data.push(assertionMessage);\n      } else {\n        if (typeof data[0] !== 'string') {\n          data.unshift(assertionMessage);\n        } else {\n          data[0] = assertionMessage + \": \" + data[0];\n        }\n      }\n\n      _enqueueRemoteLog('error', {}, data);\n    };\n\n    enhancedConsole.group = function group() {\n      for (var _len2 = arguments.length, data = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        data[_key2] = arguments[_key2];\n      }\n\n      if (originalConsole.group) {\n        originalConsole.group.apply(originalConsole, data);\n      }\n\n      _enqueueRemoteLog('info', {}, data);\n\n      groupDepth++;\n    };\n\n    enhancedConsole.groupCollapsed = function groupCollapsed() {\n      for (var _len3 = arguments.length, data = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        data[_key3] = arguments[_key3];\n      }\n\n      if (originalConsole.groupCollapsed) {\n        originalConsole.groupCollapsed.apply(originalConsole, data);\n      }\n\n      _enqueueRemoteLog('info', {\n        groupCollapsed: true\n      }, data);\n\n      groupDepth++;\n    };\n\n    enhancedConsole.groupEnd = function groupEnd() {\n      if (originalConsole.groupEnd) {\n        originalConsole.groupEnd();\n      }\n\n      if (groupDepth > 0) {\n        groupDepth--;\n      }\n\n      _enqueueRemoteLog('info', {\n        shouldHide: true\n      }, []);\n    };\n\n    function _defineConsoleLogMethod(name, level) {\n      enhancedConsole[name] = function __expoConsoleLog() {\n        var originalMethod = originalConsole[name];\n\n        for (var _len4 = arguments.length, data = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n          data[_key4] = arguments[_key4];\n        }\n\n        if (typeof originalMethod === 'function') {\n          originalMethod.apply(originalConsole, data);\n        }\n\n        _enqueueRemoteLog(level, {}, data);\n      };\n    }\n\n    function _enqueueRemoteLog(level, additionalFields, data) {\n      _RemoteLogging.default.enqueueRemoteLogAsync(level, (0, _objectSpread2.default)({\n        groupDepth: groupDepth\n      }, additionalFields), data).catch(function (error) {\n        originalConsole.error(\"There was a problem sending log messages to your development environment\", error);\n      });\n    }\n\n    return enhancedConsole;\n  }\n\n  var _default = {\n    createRemoteConsole: createRemoteConsole\n  };\n  exports.default = _default;\n});","map":[[11,0,1,0],[13,0,15,0],[13,11,15,9,"createRemoteConsole"],[13,30,15,0],[13,31,15,29,"originalConsole"],[13,46,15,0],[13,48,15,46],[14,0,16,4],[14,8,16,8,"groupDepth"],[14,18,16,18],[14,21,16,21],[14,22,16,4],[15,0,17,4],[15,8,17,10,"enhancedConsole"],[15,23,17,25],[15,26,17,28,"Object"],[15,32,17,34],[15,33,17,35,"create"],[15,39,17,28],[15,40,17,42,"originalConsole"],[15,55,17,28],[15,56,17,4],[17,0,21,4,"_defineConsoleLogMethod"],[17,4,21,4,"_defineConsoleLogMethod"],[17,27,21,27],[17,28,21,28],[17,35,21,27],[17,37,21,37],[17,43,21,27],[17,44,21,4],[19,0,23,4,"_defineConsoleLogMethod"],[19,4,23,4,"_defineConsoleLogMethod"],[19,27,23,27],[19,28,23,28],[19,33,23,27],[19,35,23,35],[19,41,23,27],[19,42,23,4],[21,0,25,4,"_defineConsoleLogMethod"],[21,4,25,4,"_defineConsoleLogMethod"],[21,27,25,27],[21,28,25,28],[21,34,25,27],[21,36,25,36],[21,42,25,27],[21,43,25,4],[23,0,27,4,"_defineConsoleLogMethod"],[23,4,27,4,"_defineConsoleLogMethod"],[23,27,27,27],[23,28,27,28],[23,34,27,27],[23,36,27,36],[23,42,27,27],[23,43,27,4],[25,0,29,4,"_defineConsoleLogMethod"],[25,4,29,4,"_defineConsoleLogMethod"],[25,27,29,27],[25,28,29,28],[25,35,29,27],[25,37,29,37],[25,44,29,27],[25,45,29,4],[27,0,31,4,"enhancedConsole"],[27,4,31,4,"enhancedConsole"],[27,19,31,19],[27,20,31,20,"assert"],[27,26,31,4],[27,29,31,29],[27,38,31,38,"assert"],[27,44,31,29],[27,45,31,45,"condition"],[27,54,31,29],[27,56,31,65],[28,0,31,65],[28,40,31,59,"data"],[28,44,31,65],[29,0,31,59,"data"],[29,8,31,59,"data"],[29,12,31,65],[30,0,31,65],[32,0,32,8],[32,10,32,12,"originalConsole"],[32,25,32,27],[32,26,32,28,"assert"],[32,32,32,8],[32,34,32,36],[33,0,34,12,"originalConsole"],[33,8,34,12,"originalConsole"],[33,23,34,27],[33,24,34,28,"assert"],[33,30,34,12],[33,37,34,12,"originalConsole"],[33,52,34,27],[33,55,34,35],[33,56,34,36],[33,57,34,37,"condition"],[33,66,34,27],[33,75,34,51,"data"],[33,79,34,27],[33,81,34,12],[34,0,35,9],[36,0,36,8],[36,10,36,12,"condition"],[36,19,36,8],[36,21,36,23],[37,0,37,12],[38,0,38,9],[40,0,39,8],[40,10,39,14,"assertionMessage"],[40,26,39,30],[40,29,39,33],[40,47,39,8],[42,0,40,8],[42,10,40,12],[42,11,40,13,"data"],[42,15,40,17],[42,16,40,18,"length"],[42,22,40,8],[42,24,40,26],[43,0,41,12,"data"],[43,8,41,12,"data"],[43,12,41,16],[43,13,41,17,"push"],[43,17,41,12],[43,18,41,22,"assertionMessage"],[43,34,41,12],[44,0,42,9],[44,7,40,8],[44,13,43,13],[45,0,44,12],[45,12,44,16],[45,19,44,23,"data"],[45,23,44,27],[45,24,44,28],[45,25,44,27],[45,26,44,16],[45,31,44,35],[45,39,44,12],[45,41,44,45],[46,0,45,16,"data"],[46,10,45,16,"data"],[46,14,45,20],[46,15,45,21,"unshift"],[46,22,45,16],[46,23,45,29,"assertionMessage"],[46,39,45,16],[47,0,46,13],[47,9,44,12],[47,15,47,17],[48,0,48,16,"data"],[48,10,48,16,"data"],[48,14,48,20],[48,15,48,21],[48,16,48,20],[48,17,48,16],[48,20,48,29,"assertionMessage"],[48,36,48,16],[48,46,48,50,"data"],[48,50,48,54],[48,51,48,55],[48,52,48,54],[48,53,48,16],[49,0,49,13],[50,0,50,9],[52,0,51,8,"_enqueueRemoteLog"],[52,6,51,8,"_enqueueRemoteLog"],[52,23,51,25],[52,24,51,26],[52,31,51,25],[52,33,51,35],[52,35,51,25],[52,37,51,39,"data"],[52,41,51,25],[52,42,51,8],[53,0,52,5],[53,5,31,4],[55,0,54,4,"enhancedConsole"],[55,4,54,4,"enhancedConsole"],[55,19,54,19],[55,20,54,20,"group"],[55,25,54,4],[55,28,54,28],[55,37,54,37,"group"],[55,42,54,28],[55,45,54,52],[56,0,54,52],[56,41,54,46,"data"],[56,45,54,52],[57,0,54,46,"data"],[57,8,54,46,"data"],[57,12,54,52],[58,0,54,52],[60,0,55,8],[60,10,55,12,"originalConsole"],[60,25,55,27],[60,26,55,28,"group"],[60,31,55,8],[60,33,55,35],[61,0,57,12,"originalConsole"],[61,8,57,12,"originalConsole"],[61,23,57,27],[61,24,57,28,"group"],[61,29,57,12],[61,36,57,12,"originalConsole"],[61,51,57,27],[61,53,57,37,"data"],[61,57,57,27],[61,58,57,12],[62,0,58,9],[64,0,59,8,"_enqueueRemoteLog"],[64,6,59,8,"_enqueueRemoteLog"],[64,23,59,25],[64,24,59,26],[64,30,59,25],[64,32,59,34],[64,34,59,25],[64,36,59,38,"data"],[64,40,59,25],[64,41,59,8],[66,0,60,8,"groupDepth"],[66,6,60,8,"groupDepth"],[66,16,60,18],[67,0,61,5],[67,5,54,4],[69,0,63,4,"enhancedConsole"],[69,4,63,4,"enhancedConsole"],[69,19,63,19],[69,20,63,20,"groupCollapsed"],[69,34,63,4],[69,37,63,37],[69,46,63,46,"groupCollapsed"],[69,60,63,37],[69,63,63,70],[70,0,63,70],[70,41,63,64,"data"],[70,45,63,70],[71,0,63,64,"data"],[71,8,63,64,"data"],[71,12,63,70],[72,0,63,70],[74,0,64,8],[74,10,64,12,"originalConsole"],[74,25,64,27],[74,26,64,28,"groupCollapsed"],[74,40,64,8],[74,42,64,44],[75,0,66,12,"originalConsole"],[75,8,66,12,"originalConsole"],[75,23,66,27],[75,24,66,28,"groupCollapsed"],[75,38,66,12],[75,45,66,12,"originalConsole"],[75,60,66,27],[75,62,66,46,"data"],[75,66,66,27],[75,67,66,12],[76,0,67,9],[78,0,68,8,"_enqueueRemoteLog"],[78,6,68,8,"_enqueueRemoteLog"],[78,23,68,25],[78,24,68,26],[78,30,68,25],[78,32,68,34],[79,0,68,36,"groupCollapsed"],[79,8,68,36,"groupCollapsed"],[79,22,68,50],[79,24,68,52],[80,0,68,34],[80,7,68,25],[80,9,68,60,"data"],[80,13,68,25],[80,14,68,8],[82,0,69,8,"groupDepth"],[82,6,69,8,"groupDepth"],[82,16,69,18],[83,0,70,5],[83,5,63,4],[85,0,72,4,"enhancedConsole"],[85,4,72,4,"enhancedConsole"],[85,19,72,19],[85,20,72,20,"groupEnd"],[85,28,72,4],[85,31,72,31],[85,40,72,40,"groupEnd"],[85,48,72,31],[85,51,72,51],[86,0,73,8],[86,10,73,12,"originalConsole"],[86,25,73,27],[86,26,73,28,"groupEnd"],[86,34,73,8],[86,36,73,38],[87,0,74,12,"originalConsole"],[87,8,74,12,"originalConsole"],[87,23,74,27],[87,24,74,28,"groupEnd"],[87,32,74,12],[88,0,75,9],[90,0,76,8],[90,10,76,12,"groupDepth"],[90,20,76,22],[90,23,76,25],[90,24,76,8],[90,26,76,28],[91,0,77,12,"groupDepth"],[91,8,77,12,"groupDepth"],[91,18,77,22],[92,0,78,9],[94,0,79,8,"_enqueueRemoteLog"],[94,6,79,8,"_enqueueRemoteLog"],[94,23,79,25],[94,24,79,26],[94,30,79,25],[94,32,79,34],[95,0,79,36,"shouldHide"],[95,8,79,36,"shouldHide"],[95,18,79,46],[95,20,79,48],[96,0,79,34],[96,7,79,25],[96,9,79,56],[96,11,79,25],[96,12,79,8],[97,0,80,5],[97,5,72,4],[99,0,85,4],[99,13,85,13,"_defineConsoleLogMethod"],[99,36,85,4],[99,37,85,37,"name"],[99,41,85,4],[99,43,85,43,"level"],[99,48,85,4],[99,50,85,50],[100,0,86,8,"enhancedConsole"],[100,6,86,8,"enhancedConsole"],[100,21,86,23],[100,22,86,24,"name"],[100,26,86,23],[100,27,86,8],[100,30,86,32],[100,39,86,41,"__expoConsoleLog"],[100,55,86,32],[100,58,86,67],[101,0,87,12],[101,12,87,16,"originalMethod"],[101,26,87,30],[101,29,87,33,"originalConsole"],[101,44,87,48],[101,45,87,49,"name"],[101,49,87,48],[101,50,87,12],[103,0,86,67],[103,43,86,61,"data"],[103,47,86,67],[104,0,86,61,"data"],[104,10,86,61,"data"],[104,14,86,67],[105,0,86,67],[107,0,88,12],[107,12,88,16],[107,19,88,23,"originalMethod"],[107,33,88,16],[107,38,88,42],[107,48,88,12],[107,50,88,54],[108,0,89,16,"originalMethod"],[108,10,89,16,"originalMethod"],[108,24,89,30],[108,25,89,31,"apply"],[108,30,89,16],[108,31,89,37,"originalConsole"],[108,46,89,16],[108,48,89,54,"data"],[108,52,89,16],[109,0,90,13],[111,0,91,12,"_enqueueRemoteLog"],[111,8,91,12,"_enqueueRemoteLog"],[111,25,91,29],[111,26,91,30,"level"],[111,31,91,29],[111,33,91,37],[111,35,91,29],[111,37,91,41,"data"],[111,41,91,29],[111,42,91,12],[112,0,92,9],[112,7,86,8],[113,0,93,5],[115,0,100,4],[115,13,100,13,"_enqueueRemoteLog"],[115,30,100,4],[115,31,100,31,"level"],[115,36,100,4],[115,38,100,38,"additionalFields"],[115,54,100,4],[115,56,100,56,"data"],[115,60,100,4],[115,62,100,62],[116,0,101,8,"RemoteLogging"],[116,29,101,22,"enqueueRemoteLogAsync"],[116,50,101,8],[116,51,101,44,"level"],[116,56,101,8],[117,0,101,53,"groupDepth"],[117,8,101,53,"groupDepth"],[117,18,101,63],[117,20,101,53,"groupDepth"],[118,0,101,8],[118,9,101,68,"additionalFields"],[118,25,101,8],[118,28,101,88,"data"],[118,32,101,8],[118,34,101,94,"catch"],[118,39,101,8],[118,40,101,100],[118,50,101,100,"error"],[118,55,101,105],[118,57,101,109],[119,0,102,12,"originalConsole"],[119,8,102,12,"originalConsole"],[119,23,102,27],[119,24,102,28,"error"],[119,29,102,12],[119,106,102,110,"error"],[119,111,102,12],[120,0,103,9],[120,7,101,8],[121,0,104,5],[123,0,105,4],[123,11,105,11,"enhancedConsole"],[123,26,105,4],[124,0,106,1],[126,17,107,15],[127,0,108,4,"createRemoteConsole"],[127,4,108,4,"createRemoteConsole"],[127,23,108,23],[127,25,108,4,"createRemoteConsole"],[128,0,107,15],[128,3]]},"type":"js/module"}]}