{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"expo-core","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _expoCore = _$$_REQUIRE(_dependencyMap[3], \"expo-core\");\n\n  var DeviceSensor = function () {\n    function DeviceSensor(nativeSensorModule, nativeEventName) {\n      (0, _classCallCheck2.default)(this, DeviceSensor);\n      this._nativeModule = nativeSensorModule;\n      this._nativeEmitter = new _expoCore.EventEmitter(nativeSensorModule);\n      this._nativeEventName = nativeEventName;\n    }\n\n    (0, _createClass2.default)(DeviceSensor, [{\n      key: \"addListener\",\n      value: function addListener(listener) {\n        var _this = this;\n\n        var subscription = this._nativeEmitter.addListener(this._nativeEventName, listener);\n\n        subscription.remove = function () {\n          return _this.removeSubscription(subscription);\n        };\n\n        return subscription;\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners() {\n        this._nativeEmitter.removeAllListeners(this._nativeEventName);\n      }\n    }, {\n      key: \"removeSubscription\",\n      value: function removeSubscription(subscription) {\n        this._nativeEmitter.removeSubscription(subscription);\n      }\n    }, {\n      key: \"setUpdateInterval\",\n      value: function setUpdateInterval(intervalMs) {\n        this._nativeModule.setUpdateInterval(intervalMs);\n      }\n    }]);\n    return DeviceSensor;\n  }();\n\n  exports.default = DeviceSensor;\n});","map":[[13,0,3,0],[15,6,17,21,"DeviceSensor"],[15,18],[16,0,22,2],[16,26,22,14,"nativeSensorModule"],[16,44,22,2],[16,46,22,54,"nativeEventName"],[16,61,22,2],[16,63,22,79],[17,0,22,79],[18,0,23,4],[18,11,23,9,"_nativeModule"],[18,24,23,4],[18,27,23,25,"nativeSensorModule"],[18,45,23,4],[19,0,24,4],[19,11,24,9,"_nativeEmitter"],[19,25,24,4],[19,28,24,26],[19,32,24,30,"EventEmitter"],[19,54,24,26],[19,55,24,43,"nativeSensorModule"],[19,73,24,26],[19,74,24,4],[20,0,25,4],[20,11,25,9,"_nativeEventName"],[20,27,25,4],[20,30,25,28,"nativeEventName"],[20,45,25,4],[21,0,26,3],[25,34,28,14,"listener"],[25,42],[25,44,28,51],[26,0,28,51],[28,0,29,4],[28,12,29,8,"subscription"],[28,24,29,20],[28,27,29,23],[28,32,29,28,"_nativeEmitter"],[28,46,29,23],[28,47,29,43,"addListener"],[28,58,29,23],[28,59,29,55],[28,64,29,60,"_nativeEventName"],[28,80,29,23],[28,82,29,78,"listener"],[28,90,29,23],[28,91,29,4],[30,0,30,4,"subscription"],[30,8,30,4,"subscription"],[30,20,30,16],[30,21,30,17,"remove"],[30,27,30,4],[30,30,30,26],[31,0,30,26],[31,17,30,32],[31,22,30,36],[31,23,30,37,"removeSubscription"],[31,41,30,32],[31,42,30,56,"subscription"],[31,54,30,32],[31,55,30,26],[32,0,30,26],[32,9,30,4],[34,0,31,4],[34,15,31,11,"subscription"],[34,27,31,4],[35,0,32,3],[38,43,34,29],[39,0,35,4],[39,13,35,9,"_nativeEmitter"],[39,27,35,4],[39,28,35,24,"removeAllListeners"],[39,46,35,4],[39,47,35,43],[39,52,35,48,"_nativeEventName"],[39,68,35,4],[40,0,36,3],[43,41,38,21,"subscription"],[43,53],[43,55,38,55],[44,0,39,4],[44,13,39,9,"_nativeEmitter"],[44,27,39,4],[44,28,39,24,"removeSubscription"],[44,46,39,4],[44,47,39,43,"subscription"],[44,59,39,4],[45,0,40,3],[48,40,42,20,"intervalMs"],[48,50],[48,52,42,46],[49,0,43,4],[49,13,43,9,"_nativeModule"],[49,26,43,4],[49,27,43,23,"setUpdateInterval"],[49,44,43,4],[49,45,43,41,"intervalMs"],[49,55,43,4],[50,0,44,3]]},"type":"js/module"}]}