{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"expo-core","data":{"isAsync":false}},{"name":"expo-asset","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.processFontFamily = processFontFamily;\n  exports.isLoaded = isLoaded;\n  exports.isLoading = isLoading;\n  exports.loadAsync = loadAsync;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"invariant\"));\n\n  var _expoCore = _$$_REQUIRE(_dependencyMap[3], \"expo-core\");\n\n  var ExpoFontLoader = _expoCore.NativeModulesProxy.ExpoFontLoader;\n\n  var _requireAsset = requireAsset(),\n      Asset = _requireAsset.Asset;\n\n  var _requireConstants = requireConstants(),\n      Constants = _requireConstants.Constants;\n\n  function requireAsset() {\n    try {\n      return _$$_REQUIRE(_dependencyMap[4], \"expo-asset\");\n    } catch (error) {\n      throw new Error('expo-font needs expo-asset to be installed');\n    }\n  }\n\n  function requireConstants() {\n    try {\n      return _$$_REQUIRE(_dependencyMap[5], \"expo-constants\");\n    } catch (error) {\n      throw new Error('expo-font needs expo-constants to be installed');\n    }\n  }\n\n  var loaded = {};\n  var loadPromises = {};\n\n  function processFontFamily(name) {\n    if (!name || Constants.systemFonts.includes(name) || name === 'System') {\n      return name;\n    }\n\n    if (name.includes(Constants.sessionId)) {\n      return name;\n    }\n\n    if (!isLoaded(name)) {\n      if (__DEV__) {\n        if (isLoading(name)) {\n          console.error(\"You started loading '\" + name + \"', but used it before it finished loading\\n\\n\" + \"- You need to wait for Font.loadAsync to complete before using the font.\\n\\n\" + \"- We recommend loading all fonts before rendering the app, and rendering only \" + \"Expo.AppLoading while waiting for loading to complete.\");\n        } else {\n          console.error(\"fontFamily '\" + name + \"' is not a system font and has not been loaded through \" + \"Font.loadAsync.\\n\\n\" + \"- If you intended to use a system font, make sure you typed the name \" + \"correctly and that it is supported by your device operating system.\\n\\n\" + \"- If this is a custom font, be sure to load it with Font.loadAsync.\");\n        }\n      }\n\n      return 'System';\n    }\n\n    return \"ExpoFont-\" + _getNativeFontName(name);\n  }\n\n  function isLoaded(name) {\n    return loaded.hasOwnProperty(name);\n  }\n\n  function isLoading(name) {\n    return loadPromises.hasOwnProperty(name);\n  }\n\n  function loadAsync(nameOrMap, uriOrModuleOrAsset) {\n    var fontMap, names, name, asset;\n    return _regenerator.default.async(function loadAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!Array.isArray(nameOrMap)) {\n              _context2.next = 7;\n              break;\n            }\n\n            console.warn(\"Passing in an array to Font.loadAsync like Font.loadAsync([fontMap1, fontMap2, fontMap3]) is deprecated and will be removed in SDK 25. Instead, pass in a single font map. The object spread syntax may help with this: Font.loadAsync({ ...fontMap1, ...fontMap2, ...fontMap3 })\");\n            _context2.next = 4;\n            return _regenerator.default.awrap(Promise.all(nameOrMap.map(loadAsync)));\n\n          case 4:\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            if (!(typeof nameOrMap === 'object')) {\n              _context2.next = 13;\n              break;\n            }\n\n            fontMap = nameOrMap;\n            names = Object.keys(fontMap);\n            _context2.next = 12;\n            return _regenerator.default.awrap(Promise.all(names.map(function (name) {\n              return loadAsync(name, fontMap[name]);\n            })));\n\n          case 12:\n            return _context2.abrupt(\"return\");\n\n          case 13:\n            name = nameOrMap;\n\n            if (!loaded[name]) {\n              _context2.next = 16;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 16:\n            if (!loadPromises[name]) {\n              _context2.next = 18;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", loadPromises[name]);\n\n          case 18:\n            (0, _invariant.default)(uriOrModuleOrAsset, \"No source from which to load font \\\"\" + name + \"\\\"\");\n            asset = _getAssetForSource(uriOrModuleOrAsset);\n\n            loadPromises[name] = function _callee() {\n              return _regenerator.default.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      _context.next = 3;\n                      return _regenerator.default.awrap(_loadSingleFontAsync(name, asset));\n\n                    case 3:\n                      loaded[name] = true;\n\n                    case 4:\n                      _context.prev = 4;\n                      delete loadPromises[name];\n                      return _context.finish(4);\n\n                    case 7:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, this, [[0,, 4, 7]]);\n            }();\n\n            _context2.next = 23;\n            return _regenerator.default.awrap(loadPromises[name]);\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _getAssetForSource(uriOrModuleOrAsset) {\n    if (typeof uriOrModuleOrAsset === 'string') {\n      throw new Error('Loading fonts from remote URIs is temporarily not supported. Please download the font file and load it using require. See: https://docs.expo.io/versions/latest/guides/using-custom-fonts.html#downloading-the-font');\n    }\n\n    if (typeof uriOrModuleOrAsset === 'number') {\n      return Asset.fromModule(uriOrModuleOrAsset);\n    }\n\n    return uriOrModuleOrAsset;\n  }\n\n  function _loadSingleFontAsync(name, asset) {\n    return _regenerator.default.async(function _loadSingleFontAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regenerator.default.awrap(asset.downloadAsync());\n\n          case 2:\n            if (asset.downloaded) {\n              _context3.next = 4;\n              break;\n            }\n\n            throw new Error(\"Failed to download asset for font \\\"\" + name + \"\\\"\");\n\n          case 4:\n            _context3.next = 6;\n            return _regenerator.default.awrap(ExpoFontLoader.loadAsync(_getNativeFontName(name), asset.localUri));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  function _getNativeFontName(name) {\n    return Constants.sessionId + \"-\" + name;\n  }\n});","map":[[14,0,3,0],[16,0,4,0],[18,6,5,8,"ExpoFontLoader"],[18,20],[18,23,5,27,"NativeModulesProxy"],[18,51],[18,52,5,8,"ExpoFontLoader"],[18,66],[20,22,7,18,"requireAsset"],[20,34,7,30],[20,36],[21,6,7,8,"Asset"],[21,11],[21,28,7,8,"Asset"],[21,33],[23,26,8,22,"requireConstants"],[23,42,8,38],[23,44],[24,6,8,8,"Constants"],[24,15],[24,36,8,8,"Constants"],[24,45],[26,0,10,0],[26,11,10,9,"requireAsset"],[26,23,10,0],[26,26,10,24],[27,0,11,2],[27,8,11,6],[28,0,12,4],[28,13,12,11,"require"],[28,24,12,18],[28,57,12,4],[29,0,13,3],[29,5,11,2],[29,6,13,4],[29,13,13,11,"error"],[29,18,13,4],[29,20,13,18],[30,0,14,4],[30,12,14,10],[30,16,14,14,"Error"],[30,21,14,10],[30,22,14,20],[30,66,14,10],[30,67,14,4],[31,0,15,3],[32,0,16,1],[34,0,18,0],[34,11,18,9,"requireConstants"],[34,27,18,0],[34,30,18,28],[35,0,19,2],[35,8,19,6],[36,0,20,4],[36,13,20,11,"require"],[36,24,20,18],[36,61,20,4],[37,0,21,3],[37,5,19,2],[37,6,21,4],[37,13,21,11,"error"],[37,18,21,4],[37,20,21,18],[38,0,22,4],[38,12,22,10],[38,16,22,14,"Error"],[38,21,22,10],[38,22,22,20],[38,70,22,10],[38,71,22,4],[39,0,23,3],[40,0,24,1],[42,0,28,0],[42,6,28,6,"loaded"],[42,12,28,41],[42,15,28,44],[42,17,28,0],[43,0,29,0],[43,6,29,6,"loadPromises"],[43,18,29,53],[43,21,29,56],[43,23,29,0],[45,0,31,7],[45,11,31,16,"processFontFamily"],[45,28,31,7],[45,29,31,34,"name"],[45,33,31,7],[45,35,31,58],[46,0,32,2],[46,8,32,6],[46,9,32,7,"name"],[46,13,32,6],[46,17,32,15,"Constants"],[46,26,32,24],[46,27,32,25,"systemFonts"],[46,38,32,15],[46,39,32,37,"includes"],[46,47,32,15],[46,48,32,46,"name"],[46,52,32,15],[46,53,32,6],[46,57,32,55,"name"],[46,61,32,59],[46,66,32,64],[46,74,32,2],[46,76,32,74],[47,0,33,4],[47,13,33,11,"name"],[47,17,33,4],[48,0,34,3],[50,0,36,2],[50,8,36,6,"name"],[50,12,36,10],[50,13,36,11,"includes"],[50,21,36,6],[50,22,36,20,"Constants"],[50,31,36,29],[50,32,36,30,"sessionId"],[50,41,36,6],[50,42,36,2],[50,44,36,42],[51,0,37,4],[51,13,37,11,"name"],[51,17,37,4],[52,0,38,3],[54,0,40,2],[54,8,40,6],[54,9,40,7,"isLoaded"],[54,17,40,15],[54,18,40,16,"name"],[54,22,40,15],[54,23,40,2],[54,25,40,23],[55,0,41,4],[55,10,41,8,"__DEV__"],[55,17,41,4],[55,19,41,17],[56,0,42,6],[56,12,42,10,"isLoading"],[56,21,42,19],[56,22,42,20,"name"],[56,26,42,19],[56,27,42,6],[56,29,42,27],[57,0,43,8,"console"],[57,10,43,8,"console"],[57,17,43,15],[57,18,43,16,"error"],[57,23,43,8],[57,24,44,10],[57,50,44,34,"name"],[57,54,44,10],[57,327,43,8],[58,0,49,7],[58,9,42,6],[58,15,49,13],[59,0,50,8,"console"],[59,10,50,8,"console"],[59,17,50,15],[59,18,50,16,"error"],[59,23,50,8],[59,24,51,10],[59,41,51,25,"name"],[59,45,51,10],[59,351,50,8],[60,0,57,7],[61,0,58,5],[63,0,60,4],[63,13,60,11],[63,21,60,4],[64,0,61,3],[66,0,63,2],[66,25,63,21,"_getNativeFontName"],[66,43,63,39],[66,44,63,40,"name"],[66,48,63,39],[66,49,63,2],[67,0,64,1],[69,0,66,7],[69,11,66,16,"isLoaded"],[69,19,66,7],[69,20,66,25,"name"],[69,24,66,7],[69,26,66,48],[70,0,67,2],[70,11,67,9,"loaded"],[70,17,67,15],[70,18,67,16,"hasOwnProperty"],[70,32,67,9],[70,33,67,31,"name"],[70,37,67,9],[70,38,67,2],[71,0,68,1],[73,0,70,7],[73,11,70,16,"isLoading"],[73,20,70,7],[73,21,70,26,"name"],[73,25,70,7],[73,27,70,49],[74,0,71,2],[74,11,71,9,"loadPromises"],[74,23,71,21],[74,24,71,22,"hasOwnProperty"],[74,38,71,9],[74,39,71,37,"name"],[74,43,71,9],[74,44,71,2],[75,0,72,1],[77,0,74,7],[77,11,74,22,"loadAsync"],[77,20,74,7],[77,21,75,2,"nameOrMap"],[77,30,74,7],[77,32,76,2,"uriOrModuleOrAsset"],[77,50,74,7],[78,0,74,7],[79,0,74,7],[80,0,74,7],[81,0,74,7],[82,0,74,7],[83,0,74,7],[83,17,78,6,"Array"],[83,22,78,11],[83,23,78,12,"isArray"],[83,30,78,6],[83,31,78,20,"nameOrMap"],[83,40,78,6],[83,41,74,7],[84,0,74,7],[85,0,74,7],[86,0,74,7],[88,0,79,4,"console"],[88,12,79,4,"console"],[88,19,79,11],[88,20,79,12,"warn"],[88,24,79,4],[89,0,74,7],[90,0,74,7],[90,46,82,10,"Promise"],[90,53,82,17],[90,54,82,18,"all"],[90,57,82,10],[90,58,82,22,"nameOrMap"],[90,67,82,31],[90,68,82,32,"map"],[90,71,82,22],[90,72,82,36,"loadAsync"],[90,81,82,22],[90,82,82,10],[90,83,74,7],[92,0,74,7],[93,0,74,7],[95,0,74,7],[96,0,74,7],[96,18,84,13],[96,25,84,20,"nameOrMap"],[96,34,84,13],[96,39,84,34],[96,47,74,7],[97,0,74,7],[98,0,74,7],[99,0,74,7],[101,0,85,10,"fontMap"],[101,12,85,10,"fontMap"],[101,19,74,7],[101,22,85,20,"nameOrMap"],[101,31,74,7],[102,0,86,10,"names"],[102,12,86,10,"names"],[102,17,74,7],[102,20,86,18,"Object"],[102,26,86,24],[102,27,86,25,"keys"],[102,31,86,18],[102,32,86,30,"fontMap"],[102,39,86,18],[102,40,74,7],[103,0,74,7],[104,0,74,7],[104,46,87,10,"Promise"],[104,53,87,17],[104,54,87,18,"all"],[104,57,87,10],[104,58,87,22,"names"],[104,63,87,27],[104,64,87,28,"map"],[104,67,87,22],[104,68,87,32],[104,78,87,32,"name"],[104,82,87,36],[105,0,87,36],[105,21,87,40,"loadAsync"],[105,30,87,49],[105,31,87,50,"name"],[105,35,87,49],[105,37,87,56,"fontMap"],[105,44,87,63],[105,45,87,64,"name"],[105,49,87,63],[105,50,87,49],[105,51,87,36],[106,0,87,36],[106,13,87,22],[106,14,87,10],[106,15,74,7],[108,0,74,7],[109,0,74,7],[111,0,74,7],[112,0,91,8,"name"],[112,12,91,8,"name"],[112,16,74,7],[112,19,91,15,"nameOrMap"],[112,28,74,7],[114,0,74,7],[114,17,93,6,"loaded"],[114,23,93,12],[114,24,93,13,"name"],[114,28,93,12],[114,29,74,7],[115,0,74,7],[116,0,74,7],[117,0,74,7],[119,0,74,7],[121,0,74,7],[122,0,74,7],[122,17,97,6,"loadPromises"],[122,29,97,18],[122,30,97,19,"name"],[122,34,97,18],[122,35,74,7],[123,0,74,7],[124,0,74,7],[125,0,74,7],[127,0,74,7],[127,46,98,11,"loadPromises"],[127,58,98,23],[127,59,98,24,"name"],[127,63,98,23],[127,64,74,7],[129,0,74,7],[130,0,106,2],[130,36,106,12,"uriOrModuleOrAsset"],[130,54,106,2],[130,97,106,70,"name"],[130,101,106,2],[131,0,107,8,"asset"],[131,12,107,8,"asset"],[131,17,74,7],[131,20,107,16,"_getAssetForSource"],[131,38,107,34],[131,39,107,35,"uriOrModuleOrAsset"],[131,57,107,34],[131,58,74,7],[133,0,108,2,"loadPromises"],[133,12,108,2,"loadPromises"],[133,24,108,14],[133,25,108,15,"name"],[133,29,108,14],[133,30,108,2],[133,33,108,24],[134,0,108,24],[135,0,108,24],[136,0,108,24],[137,0,108,24],[138,0,108,24],[139,0,108,24],[140,0,108,24],[140,56,110,12,"_loadSingleFontAsync"],[140,76,110,32],[140,77,110,33,"name"],[140,81,110,32],[140,83,110,39,"asset"],[140,88,110,32],[140,89,108,24],[142,0,108,24],[143,0,111,6,"loaded"],[143,22,111,6,"loaded"],[143,28,111,12],[143,29,111,13,"name"],[143,33,111,12],[143,34,111,6],[143,37,111,21],[143,41,111,6],[145,0,108,24],[146,0,108,24],[147,0,113,6],[147,29,113,13,"loadPromises"],[147,41,113,25],[147,42,113,26,"name"],[147,46,113,25],[147,47,113,6],[148,0,108,24],[150,0,108,24],[151,0,108,24],[152,0,108,24],[153,0,108,24],[154,0,108,24],[155,0,108,24],[156,0,108,24],[156,13,108,23],[156,15,108,2],[158,0,74,7],[159,0,74,7],[159,46,117,8,"loadPromises"],[159,58,117,20],[159,59,117,21,"name"],[159,63,117,20],[159,64,74,7],[161,0,74,7],[162,0,74,7],[163,0,74,7],[164,0,74,7],[165,0,74,7],[166,0,74,7],[167,0,74,7],[169,0,120,0],[169,11,120,9,"_getAssetForSource"],[169,29,120,0],[169,30,120,28,"uriOrModuleOrAsset"],[169,48,120,0],[169,50,120,67],[170,0,121,2],[170,8,121,6],[170,15,121,13,"uriOrModuleOrAsset"],[170,33,121,6],[170,38,121,36],[170,46,121,2],[170,48,121,46],[171,0,124,4],[171,12,124,10],[171,16,124,14,"Error"],[171,21,124,10],[171,22,125,6],[171,235,124,10],[171,236,124,4],[172,0,127,3],[174,0,129,2],[174,8,129,6],[174,15,129,13,"uriOrModuleOrAsset"],[174,33,129,6],[174,38,129,36],[174,46,129,2],[174,48,129,46],[175,0,130,4],[175,13,130,11,"Asset"],[175,18,130,16],[175,19,130,17,"fromModule"],[175,29,130,11],[175,30,130,28,"uriOrModuleOrAsset"],[175,48,130,11],[175,49,130,4],[176,0,131,3],[178,0,133,2],[178,11,133,9,"uriOrModuleOrAsset"],[178,29,133,2],[179,0,134,1],[181,0,136,0],[181,11,136,15,"_loadSingleFontAsync"],[181,31,136,0],[181,32,136,36,"name"],[181,36,136,0],[181,38,136,50,"asset"],[181,43,136,0],[182,0,136,0],[183,0,136,0],[184,0,136,0],[185,0,136,0],[186,0,136,0],[187,0,136,0],[187,46,137,8,"asset"],[187,51,137,13],[187,52,137,14,"downloadAsync"],[187,65,137,8],[187,67,136,0],[189,0,136,0],[190,0,136,0],[190,16,138,7,"asset"],[190,21,138,12],[190,22,138,13,"downloaded"],[190,32,136,0],[191,0,136,0],[192,0,136,0],[193,0,136,0],[195,0,136,0],[195,18,139,10],[195,22,139,14,"Error"],[195,27,139,10],[195,69,139,58,"name"],[195,73,139,10],[195,81,136,0],[197,0,136,0],[198,0,136,0],[199,0,136,0],[199,46,141,8,"ExpoFontLoader"],[199,60,141,22],[199,61,141,23,"loadAsync"],[199,70,141,8],[199,71,141,33,"_getNativeFontName"],[199,89,141,51],[199,90,141,52,"name"],[199,94,141,51],[199,95,141,8],[199,97,141,59,"asset"],[199,102,141,64],[199,103,141,65,"localUri"],[199,111,141,8],[199,112,136,0],[201,0,136,0],[202,0,136,0],[203,0,136,0],[204,0,136,0],[205,0,136,0],[206,0,136,0],[207,0,136,0],[209,0,144,0],[209,11,144,9,"_getNativeFontName"],[209,29,144,0],[209,30,144,28,"name"],[209,34,144,0],[209,36,144,50],[210,0,145,2],[210,11,145,12,"Constants"],[210,20,145,21],[210,21,145,22,"sessionId"],[210,30,145,2],[210,39,145,35,"name"],[210,43,145,2],[211,0,146,1]]},"type":"js/module"}]}