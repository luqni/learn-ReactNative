{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"react-native/Libraries/Animated/src/AnimatedEvent","data":{"isAsync":false}},{"name":"react-native-gesture-handler","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"invariant\"));\n\n  var _AnimatedEvent = _$$_REQUIRE(_dependencyMap[12], \"react-native/Libraries/Animated/src/AnimatedEvent\");\n\n  var _reactNativeGestureHandler = _$$_REQUIRE(_dependencyMap[13], \"react-native-gesture-handler\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/root21/Bootcamp/Course_ReactNative/react1/node_modules/react-native-gesture-handler/DrawerLayout.js\";\n\n  var _components = {\n    DrawerLayout: {\n      displayName: \"DrawerLayout\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/root21/Bootcamp/Course_ReactNative/react1/node_modules/react-native-gesture-handler/DrawerLayout.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  var DrawerLayout = _wrapComponent(\"DrawerLayout\")((_temp = _class = function (_Component) {\n    (0, _inherits2.default)(DrawerLayout, _Component);\n\n    function DrawerLayout(_props, context) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerLayout).call(this, _props, context));\n\n      _this._updateAnimatedEvent = function (props, state) {\n        var drawerPosition = props.drawerPosition,\n            drawerWidth = props.drawerWidth,\n            drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n            touchXValue = state.touchX,\n            drawerTranslation = state.drawerTranslation,\n            containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n\n        if (drawerPosition !== 'left') {\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        var translationX = dragX;\n\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);\n        }\n\n        _this._openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        _this._onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], {\n          useNativeDriver: props.useNativeAnimations\n        });\n      };\n\n      _this._handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n\n      _this._emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged && _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n\n      _this._openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n\n        if (nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE) {\n          _this._handleRelease(nativeEvent);\n        } else if (nativeEvent.state === _reactNativeGestureHandler.State.ACTIVE) {\n          _this._emitStateChanged(DRAGGING, false);\n\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n\n      _this._onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n\n        if (_this.state.drawerShown && nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE) {\n          _this.closeDrawer();\n        }\n      };\n\n      _this._handleRelease = function (nativeEvent) {\n        var _this$props = _this.props,\n            drawerWidth = _this$props.drawerWidth,\n            drawerPosition = _this$props.drawerPosition,\n            drawerType = _this$props.drawerType;\n        var _this$state = _this.state,\n            drawerShown = _this$state.drawerShown,\n            containerWidth = _this$state.containerWidth;\n        var dragX = nativeEvent.translationX,\n            velocityX = nativeEvent.velocityX,\n            touchX = nativeEvent.x;\n\n        if (drawerPosition !== 'left') {\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n\n        if (shouldOpen) {\n          _this._animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this._animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n\n      _this._animateDrawer = function (fromValue, toValue, velocity) {\n        _this.state.dragX.setValue(0);\n\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n\n        if (fromValue !== undefined) {\n          _this.state.drawerTranslation.setValue(fromValue);\n        }\n\n        var willShow = toValue !== 0;\n\n        _this.setState({\n          drawerShown: willShow\n        });\n\n        _this._emitStateChanged(SETTLING, willShow);\n\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations\n        }).start(function (_ref4) {\n          var finished = _ref4.finished;\n\n          if (finished) {\n            _this._emitStateChanged(IDLE, willShow);\n\n            if (willShow) {\n              _this.props.onDrawerOpen && _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose && _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0);\n      };\n\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(undefined, 0, options.velocity ? options.velocity : 0);\n      };\n\n      _this._renderOverlay = function () {\n        (0, _invariant.default)(_this._openValue, 'should be set');\n\n        var overlayOpacity = _this._openValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 0.7],\n          extrapolate: 'clamp'\n        });\n\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return _react.default.createElement(_reactNativeGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this._onTapHandlerStateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: _this.state.drawerShown ? 'auto' : 'none',\n          style: [styles.overlay, dynamicOverlayStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          }\n        }));\n      };\n\n      _this._renderDrawer = function () {\n        var drawerShown = _this.state.drawerShown;\n        var _this$props2 = _this.props,\n            drawerBackgroundColor = _this$props2.drawerBackgroundColor,\n            drawerWidth = _this$props2.drawerWidth,\n            drawerPosition = _this$props2.drawerPosition,\n            drawerType = _this$props2.drawerType,\n            contentContainerStyle = _this$props2.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this._openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n\n        var drawerTranslateX = 0;\n\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          drawerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [closedDrawerOffset, 0],\n            extrapolate: 'clamp'\n          });\n        }\n\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: fromLeft ? 'row' : 'row-reverse'\n        };\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this._handleContainerLayout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 378\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 379\n          }\n        }, typeof _this.props.children === 'function' ? _this.props.children(_this._openValue) : _this.props.children, _this._renderOverlay()), _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: \"box-none\",\n          accessibilityViewIsModal: drawerShown,\n          style: [styles.drawerContainer, drawerStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: [styles.drawer, dynamicDrawerStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396\n          }\n        }, _this.props.renderNavigationView(_this._openValue))));\n      };\n\n      var _dragX = new _reactNative.Animated.Value(0);\n\n      var _touchX = new _reactNative.Animated.Value(0);\n\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        drawerShown: false,\n        containerWidth: 0\n      };\n\n      _this._updateAnimatedEvent(_props, _this.state);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerLayout, [{\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this._updateAnimatedEvent(props, state);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$state2 = this.state,\n            drawerShown = _this$state2.drawerShown,\n            containerWidth = _this$state2.containerWidth;\n        var _this$props3 = this.props,\n            drawerPosition = _this$props3.drawerPosition,\n            drawerType = _this$props3.drawerType,\n            edgeWidth = _this$props3.edgeWidth,\n            minSwipeDistance = _this$props3.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          right: drawerShown ? 0 : edgeWidth - containerWidth\n        } : {\n          left: drawerShown ? 0 : edgeWidth - containerWidth\n        };\n        return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler, {\n          hitSlop: hitSlop,\n          minOffsetX: gestureOrientation * minSwipeDistance,\n          onGestureEvent: this._onGestureEvent,\n          onHandlerStateChange: this._openingHandlerStateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429\n          }\n        }, this._renderDrawer());\n      }\n    }]);\n    return DrawerLayout;\n  }(_react.Component), _class.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'black'\n  }, _class.positions = {\n    Left: 'left',\n    Right: 'right'\n  }, _temp));\n\n  var _default2 = DrawerLayout;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    drawer: {\n      flex: 0\n    },\n    drawerContainer: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","map":[[23,0,11,0],[27,0,12,0],[29,0,13,0],[31,0,14,0],[33,0,16,0],[58,0,22,0],[58,6,22,6,"DRAG_TOSS"],[58,15,22,15],[58,18,22,18],[58,22,22,0],[59,0,24,0],[59,6,24,6,"IDLE"],[59,10,24,10],[59,13,24,13],[59,19,24,0],[60,0,25,0],[60,6,25,6,"DRAGGING"],[60,14,25,14],[60,17,25,17],[60,27,25,0],[61,0,26,0],[61,6,26,6,"SETTLING"],[61,14,26,14],[61,17,26,17],[61,27,26,0],[66,0,88,2],[66,26,88,14,"props"],[66,32,88,2],[66,34,88,31,"context"],[66,41,88,2],[66,43,88,45],[67,0,88,45],[69,0,88,45],[70,0,89,4],[70,116,89,10,"props"],[70,122,89,4],[70,124,89,17,"context"],[70,131,89,4],[72,0,88,45],[72,12,117,2,"_updateAnimatedEvent"],[72,32,88,45],[72,35,117,25],[72,45,117,26,"props"],[72,50,117,25],[72,52,117,43,"state"],[72,57,117,25],[72,59,117,64],[73,0,117,64],[73,12,119,12,"drawerPosition"],[73,26,117,64],[73,29,119,56,"props"],[73,34,117,64],[73,35,119,12,"drawerPosition"],[73,49,117,64],[74,0,117,64],[74,12,119,28,"drawerWidth"],[74,23,117,64],[74,26,119,56,"props"],[74,31,117,64],[74,32,119,28,"drawerWidth"],[74,43,117,64],[75,0,117,64],[75,12,119,41,"drawerType"],[75,22,117,64],[75,25,119,56,"props"],[75,30,117,64],[75,31,119,41,"drawerType"],[75,41,117,64],[76,0,117,64],[76,12,121,13,"dragXValue"],[76,22,117,64],[76,25,125,8,"state"],[76,30,117,64],[76,31,121,6,"dragX"],[76,36,117,64],[77,0,117,64],[77,12,122,14,"touchXValue"],[77,23,117,64],[77,26,125,8,"state"],[77,31,117,64],[77,32,122,6,"touchX"],[77,38,117,64],[78,0,117,64],[78,12,123,6,"drawerTranslation"],[78,29,117,64],[78,32,125,8,"state"],[78,37,117,64],[78,38,123,6,"drawerTranslation"],[78,55,117,64],[79,0,117,64],[79,12,124,6,"containerWidth"],[79,26,117,64],[79,29,125,8,"state"],[79,34,117,64],[79,35,124,6,"containerWidth"],[79,49,117,64],[80,0,127,4],[80,12,127,8,"dragX"],[80,17,127,13],[80,20,127,16,"dragXValue"],[80,30,127,4],[81,0,128,4],[81,12,128,8,"touchX"],[81,18,128,14],[81,21,128,17,"touchXValue"],[81,32,128,4],[83,0,130,4],[83,12,130,8,"drawerPosition"],[83,26,130,22],[83,31,130,27],[83,37,130,4],[83,39,130,35],[84,0,138,6,"dragX"],[84,10,138,6,"dragX"],[84,15,138,11],[84,18,138,14,"Animated"],[84,40,138,23,"multiply"],[84,48,138,14],[84,49,138,32],[84,53,138,36,"Animated"],[84,75,138,45,"Value"],[84,80,138,32],[84,81,138,51],[84,82,138,52],[84,83,138,32],[84,84,138,14],[84,86,138,56,"dragXValue"],[84,96,138,14],[84,97,138,6],[85,0,139,6,"touchX"],[85,10,139,6,"touchX"],[85,16,139,12],[85,19,139,15,"Animated"],[85,41,139,24,"add"],[85,44,139,15],[85,45,140,8],[85,49,140,12,"Animated"],[85,71,140,21,"Value"],[85,76,140,8],[85,77,140,27,"containerWidth"],[85,91,140,8],[85,92,139,15],[85,94,141,8,"Animated"],[85,116,141,17,"multiply"],[85,124,141,8],[85,125,141,26],[85,129,141,30,"Animated"],[85,151,141,39,"Value"],[85,156,141,26],[85,157,141,45],[85,158,141,46],[85,159,141,26],[85,160,141,8],[85,162,141,50,"touchXValue"],[85,173,141,8],[85,174,139,15],[85,175,139,6],[86,0,143,6,"touchXValue"],[86,10,143,6,"touchXValue"],[86,21,143,17],[86,22,143,18,"setValue"],[86,30,143,6],[86,31,143,27,"containerWidth"],[86,45,143,6],[87,0,144,5],[87,9,130,4],[87,15,144,11],[88,0,145,6,"touchXValue"],[88,10,145,6,"touchXValue"],[88,21,145,17],[88,22,145,18,"setValue"],[88,30,145,6],[88,31,145,27],[88,32,145,6],[89,0,146,5],[91,0,172,4],[91,12,172,8,"translationX"],[91,24,172,20],[91,27,172,23,"dragX"],[91,32,172,4],[93,0,173,4],[93,12,173,8,"drawerType"],[93,22,173,18],[93,27,173,23],[93,34,173,4],[93,36,173,32],[94,0,174,6],[94,14,174,12,"startPositionX"],[94,28,174,26],[94,31,174,29,"Animated"],[94,53,174,38,"add"],[94,56,174,29],[94,57,175,8,"touchX"],[94,63,174,29],[94,65,176,8,"Animated"],[94,87,176,17,"multiply"],[94,95,176,8],[94,96,176,26],[94,100,176,30,"Animated"],[94,122,176,39,"Value"],[94,127,176,26],[94,128,176,45],[94,129,176,46],[94,130,176,26],[94,131,176,8],[94,133,176,50,"dragX"],[94,138,176,8],[94,139,174,29],[94,140,174,6],[96,0,179,6],[96,14,179,12,"dragOffsetFromOnStartPosition"],[96,43,179,41],[96,46,179,44,"startPositionX"],[96,60,179,58],[96,61,179,59,"interpolate"],[96,72,179,44],[96,73,179,71],[97,0,180,8,"inputRange"],[97,12,180,8,"inputRange"],[97,22,180,18],[97,24,180,20],[97,25,180,21,"drawerWidth"],[97,36,180,32],[97,39,180,35],[97,40,180,20],[97,42,180,38,"drawerWidth"],[97,53,180,20],[97,55,180,51,"drawerWidth"],[97,66,180,62],[97,69,180,65],[97,70,180,20],[97,71,179,71],[98,0,181,8,"outputRange"],[98,12,181,8,"outputRange"],[98,23,181,19],[98,25,181,21],[98,26,181,22],[98,27,181,21],[98,29,181,25],[98,30,181,21],[98,32,181,28],[98,33,181,21],[99,0,179,71],[99,11,179,44],[99,12,179,6],[100,0,183,6,"translationX"],[100,10,183,6,"translationX"],[100,22,183,18],[100,25,183,21,"Animated"],[100,47,183,30,"add"],[100,50,183,21],[100,51,183,34,"dragX"],[100,56,183,21],[100,58,183,41,"dragOffsetFromOnStartPosition"],[100,87,183,21],[100,88,183,6],[101,0,184,5],[103,0,186,4],[103,14,186,9,"_openValue"],[103,24,186,4],[103,27,186,22,"Animated"],[103,49,186,31,"add"],[103,52,186,22],[103,53,186,35,"translationX"],[103,65,186,22],[103,67,186,49,"drawerTranslation"],[103,84,186,22],[103,86,186,68,"interpolate"],[103,97,186,22],[103,98,187,6],[104,0,188,8,"inputRange"],[104,10,188,8,"inputRange"],[104,20,188,18],[104,22,188,20],[104,23,188,21],[104,24,188,20],[104,26,188,24,"drawerWidth"],[104,37,188,20],[104,38,187,6],[105,0,189,8,"outputRange"],[105,10,189,8,"outputRange"],[105,21,189,19],[105,23,189,21],[105,24,189,22],[105,25,189,21],[105,27,189,25],[105,28,189,21],[105,29,187,6],[106,0,190,8,"extrapolate"],[106,10,190,8,"extrapolate"],[106,21,190,19],[106,23,190,21],[107,0,187,6],[107,9,186,22],[107,10,186,4],[108,0,194,4],[108,14,194,9,"_onGestureEvent"],[108,29,194,4],[108,32,194,27,"Animated"],[108,54,194,36,"event"],[108,59,194,27],[108,60,195,6],[108,61,195,7],[109,0,195,9,"nativeEvent"],[109,10,195,9,"nativeEvent"],[109,21,195,20],[109,23,195,22],[110,0,195,24,"translationX"],[110,12,195,24,"translationX"],[110,24,195,36],[110,26,195,38,"dragXValue"],[110,36,195,22],[111,0,195,50,"x"],[111,12,195,50,"x"],[111,13,195,51],[111,15,195,53,"touchXValue"],[112,0,195,22],[113,0,195,7],[113,9,195,6],[113,10,194,27],[113,12,196,6],[114,0,196,8,"useNativeDriver"],[114,10,196,8,"useNativeDriver"],[114,25,196,23],[114,27,196,25,"props"],[114,32,196,30],[114,33,196,31,"useNativeAnimations"],[115,0,196,6],[115,9,194,27],[115,10,194,4],[116,0,198,3],[116,7,88,45],[118,0,88,45],[118,12,200,2,"_handleContainerLayout"],[118,34,88,45],[118,37,200,27],[118,53,200,48],[119,0,200,48],[119,12,200,30,"nativeEvent"],[119,23,200,48],[119,31,200,30,"nativeEvent"],[119,42,200,48],[121,0,201,4],[121,14,201,9,"setState"],[121,22,201,4],[121,23,201,18],[122,0,201,20,"containerWidth"],[122,10,201,20,"containerWidth"],[122,24,201,34],[122,26,201,36,"nativeEvent"],[122,37,201,47],[122,38,201,48,"layout"],[122,44,201,36],[122,45,201,55,"width"],[123,0,201,18],[123,9,201,4],[124,0,202,3],[124,7,88,45],[126,0,88,45],[126,12,204,2,"_emitStateChanged"],[126,29,88,45],[126,32,204,22],[126,42,204,23,"newState"],[126,50,204,22],[126,52,204,41,"drawerWillShow"],[126,66,204,22],[126,68,204,69],[127,0,205,4],[127,14,205,9,"props"],[127,19,205,4],[127,20,205,15,"onDrawerStateChanged"],[127,40,205,4],[127,44,206,6],[127,50,206,11,"props"],[127,55,206,6],[127,56,206,17,"onDrawerStateChanged"],[127,76,206,6],[127,77,206,38,"newState"],[127,85,206,6],[127,87,206,48,"drawerWillShow"],[127,101,206,6],[127,102,205,4],[128,0,207,3],[128,7,88,45],[130,0,88,45],[130,12,209,2,"_openingHandlerStateChange"],[130,38,88,45],[130,41,209,31],[130,58,209,52],[131,0,209,52],[131,12,209,34,"nativeEvent"],[131,23,209,52],[131,32,209,34,"nativeEvent"],[131,43,209,52],[133,0,210,4],[133,12,210,8,"nativeEvent"],[133,23,210,19],[133,24,210,20,"oldState"],[133,32,210,8],[133,37,210,33,"State"],[133,70,210,39,"ACTIVE"],[133,76,210,4],[133,78,210,47],[134,0,211,6],[134,16,211,11,"_handleRelease"],[134,30,211,6],[134,31,211,26,"nativeEvent"],[134,42,211,6],[135,0,212,5],[135,9,210,4],[135,15,212,11],[135,19,212,15,"nativeEvent"],[135,30,212,26],[135,31,212,27,"state"],[135,36,212,15],[135,41,212,37,"State"],[135,74,212,43,"ACTIVE"],[135,80,212,11],[135,82,212,51],[136,0,213,6],[136,16,213,11,"_emitStateChanged"],[136,33,213,6],[136,34,213,29,"DRAGGING"],[136,42,213,6],[136,44,213,39],[136,49,213,6],[138,0,214,6],[138,14,214,10],[138,20,214,15,"props"],[138,25,214,10],[138,26,214,21,"keyboardDismissMode"],[138,45,214,10],[138,50,214,45],[138,59,214,6],[138,61,214,56],[139,0,215,8,"Keyboard"],[139,34,215,17,"dismiss"],[139,41,215,8],[140,0,216,7],[142,0,217,6],[142,14,217,10],[142,20,217,15,"props"],[142,25,217,10],[142,26,217,21,"hideStatusBar"],[142,39,217,6],[142,41,217,36],[143,0,218,8,"StatusBar"],[143,35,218,18,"setHidden"],[143,44,218,8],[143,45,218,28],[143,49,218,8],[143,51,218,34],[143,57,218,39,"props"],[143,62,218,34],[143,63,218,45,"statusBarAnimation"],[143,81,218,34],[143,85,218,67],[143,92,218,8],[144,0,219,7],[145,0,220,5],[146,0,221,3],[146,7,88,45],[148,0,88,45],[148,12,223,2,"_onTapHandlerStateChange"],[148,36,88,45],[148,39,223,29],[148,56,223,50],[149,0,223,50],[149,12,223,32,"nativeEvent"],[149,23,223,50],[149,32,223,32,"nativeEvent"],[149,43,223,50],[151,0,224,4],[151,12,224,8],[151,18,224,13,"state"],[151,23,224,8],[151,24,224,19,"drawerShown"],[151,35,224,8],[151,39,224,34,"nativeEvent"],[151,50,224,45],[151,51,224,46,"oldState"],[151,59,224,34],[151,64,224,59,"State"],[151,97,224,65,"ACTIVE"],[151,103,224,4],[151,105,224,73],[152,0,225,6],[152,16,225,11,"closeDrawer"],[152,27,225,6],[153,0,226,5],[154,0,227,3],[154,7,88,45],[156,0,88,45],[156,12,229,2,"_handleRelease"],[156,26,88,45],[156,29,229,19],[156,39,229,19,"nativeEvent"],[156,50,229,30],[156,52,229,34],[157,0,229,34],[157,26,230,56],[157,32,230,61,"props"],[157,37,229,34],[158,0,229,34],[158,12,230,12,"drawerWidth"],[158,23,229,34],[158,38,230,12,"drawerWidth"],[158,49,229,34],[159,0,229,34],[159,12,230,25,"drawerPosition"],[159,26,229,34],[159,41,230,25,"drawerPosition"],[159,55,229,34],[160,0,229,34],[160,12,230,41,"drawerType"],[160,22,229,34],[160,37,230,41,"drawerType"],[160,47,229,34],[161,0,229,34],[161,26,231,44],[161,32,231,49,"state"],[161,37,229,34],[162,0,229,34],[162,12,231,12,"drawerShown"],[162,23,229,34],[162,38,231,12,"drawerShown"],[162,49,229,34],[163,0,229,34],[163,12,231,25,"containerWidth"],[163,26,229,34],[163,41,231,25,"containerWidth"],[163,55,229,34],[164,0,229,34],[164,12,232,24,"dragX"],[164,17,229,34],[164,20,232,56,"nativeEvent"],[164,31,229,34],[164,32,232,10,"translationX"],[164,44,229,34],[165,0,229,34],[165,12,232,31,"velocityX"],[165,21,229,34],[165,24,232,56,"nativeEvent"],[165,35,229,34],[165,36,232,31,"velocityX"],[165,45,229,34],[166,0,229,34],[166,12,232,45,"touchX"],[166,18,229,34],[166,21,232,56,"nativeEvent"],[166,32,229,34],[166,33,232,42,"x"],[166,34,229,34],[168,0,234,4],[168,12,234,8,"drawerPosition"],[168,26,234,22],[168,31,234,27],[168,37,234,4],[168,39,234,35],[169,0,237,6,"dragX"],[169,10,237,6,"dragX"],[169,15,237,11],[169,18,237,14],[169,19,237,15,"dragX"],[169,24,237,6],[170,0,238,6,"touchX"],[170,10,238,6,"touchX"],[170,16,238,12],[170,19,238,15,"containerWidth"],[170,33,238,29],[170,36,238,32,"touchX"],[170,42,238,6],[171,0,239,6,"velocityX"],[171,10,239,6,"velocityX"],[171,19,239,15],[171,22,239,18],[171,23,239,19,"velocityX"],[171,32,239,6],[172,0,240,5],[174,0,242,4],[174,12,242,10,"gestureStartX"],[174,25,242,23],[174,28,242,26,"touchX"],[174,34,242,32],[174,37,242,35,"dragX"],[174,42,242,4],[175,0,243,4],[175,12,243,8,"dragOffsetBasedOnStart"],[175,34,243,30],[175,37,243,33],[175,38,243,4],[177,0,245,4],[177,12,245,8,"drawerType"],[177,22,245,18],[177,27,245,23],[177,34,245,4],[177,36,245,32],[178,0,246,6,"dragOffsetBasedOnStart"],[178,10,246,6,"dragOffsetBasedOnStart"],[178,32,246,28],[178,35,247,8,"gestureStartX"],[178,48,247,21],[178,51,247,24,"drawerWidth"],[178,62,247,8],[178,65,247,38,"gestureStartX"],[178,78,247,51],[178,81,247,54,"drawerWidth"],[178,92,247,8],[178,95,247,68],[178,96,246,6],[179,0,248,5],[181,0,250,4],[181,12,250,10,"startOffsetX"],[181,24,250,22],[181,27,251,6,"dragX"],[181,32,251,11],[181,35,251,14,"dragOffsetBasedOnStart"],[181,57,251,6],[181,61,251,40,"drawerShown"],[181,72,251,51],[181,75,251,54,"drawerWidth"],[181,86,251,51],[181,89,251,68],[181,90,251,6],[181,91,250,4],[182,0,252,4],[182,12,252,10,"projOffsetX"],[182,23,252,21],[182,26,252,24,"startOffsetX"],[182,38,252,36],[182,41,252,39,"DRAG_TOSS"],[182,50,252,48],[182,53,252,51,"velocityX"],[182,62,252,4],[183,0,254,4],[183,12,254,10,"shouldOpen"],[183,22,254,20],[183,25,254,23,"projOffsetX"],[183,36,254,34],[183,39,254,37,"drawerWidth"],[183,50,254,48],[183,53,254,51],[183,54,254,4],[185,0,256,4],[185,12,256,8,"shouldOpen"],[185,22,256,4],[185,24,256,20],[186,0,257,6],[186,16,257,11,"_animateDrawer"],[186,30,257,6],[186,31,257,26,"startOffsetX"],[186,43,257,6],[186,45,257,40,"drawerWidth"],[186,56,257,6],[186,58,257,53,"velocityX"],[186,67,257,6],[187,0,258,5],[187,9,256,4],[187,15,258,11],[188,0,259,6],[188,16,259,11,"_animateDrawer"],[188,30,259,6],[188,31,259,26,"startOffsetX"],[188,43,259,6],[188,45,259,40],[188,46,259,6],[188,48,259,43,"velocityX"],[188,57,259,6],[189,0,260,5],[190,0,261,3],[190,7,88,45],[192,0,88,45],[192,12,263,2,"_animateDrawer"],[192,26,88,45],[192,29,263,19],[192,39,263,20,"fromValue"],[192,48,263,19],[192,50,263,40,"toValue"],[192,57,263,19],[192,59,263,57,"velocity"],[192,67,263,19],[192,69,263,78],[193,0,264,4],[193,14,264,9,"state"],[193,19,264,4],[193,20,264,15,"dragX"],[193,25,264,4],[193,26,264,21,"setValue"],[193,34,264,4],[193,35,264,30],[193,36,264,4],[195,0,265,4],[195,14,265,9,"state"],[195,19,265,4],[195,20,265,15,"touchX"],[195,26,265,4],[195,27,265,22,"setValue"],[195,35,265,4],[195,36,266,6],[195,42,266,11,"props"],[195,47,266,6],[195,48,266,17,"drawerPosition"],[195,62,266,6],[195,67,266,36],[195,73,266,6],[195,76,266,45],[195,77,266,6],[195,80,266,49],[195,86,266,54,"state"],[195,91,266,49],[195,92,266,60,"containerWidth"],[195,106,265,4],[197,0,269,4],[197,12,269,8,"fromValue"],[197,21,269,17],[197,26,269,22,"undefined"],[197,35,269,4],[197,37,269,33],[198,0,270,6],[198,16,270,11,"state"],[198,21,270,6],[198,22,270,17,"drawerTranslation"],[198,39,270,6],[198,40,270,35,"setValue"],[198,48,270,6],[198,49,270,44,"fromValue"],[198,58,270,6],[199,0,271,5],[201,0,273,4],[201,12,273,10,"willShow"],[201,20,273,18],[201,23,273,21,"toValue"],[201,30,273,28],[201,35,273,33],[201,36,273,4],[203,0,274,4],[203,14,274,9,"setState"],[203,22,274,4],[203,23,274,18],[204,0,274,20,"drawerShown"],[204,10,274,20,"drawerShown"],[204,21,274,31],[204,23,274,33,"willShow"],[205,0,274,18],[205,9,274,4],[207,0,275,4],[207,14,275,9,"_emitStateChanged"],[207,31,275,4],[207,32,275,27,"SETTLING"],[207,40,275,4],[207,42,275,37,"willShow"],[207,50,275,4],[209,0,276,4],[209,12,276,8],[209,18,276,13,"props"],[209,23,276,8],[209,24,276,19,"hideStatusBar"],[209,37,276,4],[209,39,276,34],[210,0,277,6,"StatusBar"],[210,33,277,16,"setHidden"],[210,42,277,6],[210,43,277,26,"willShow"],[210,51,277,6],[210,53,277,36],[210,59,277,41,"props"],[210,64,277,36],[210,65,277,47,"statusBarAnimation"],[210,83,277,36],[210,87,277,69],[210,94,277,6],[211,0,278,5],[213,0,279,4,"Animated"],[213,30,279,13,"spring"],[213,36,279,4],[213,37,279,20],[213,43,279,25,"state"],[213,48,279,20],[213,49,279,31,"drawerTranslation"],[213,66,279,4],[213,68,279,50],[214,0,280,6,"velocity"],[214,10,280,6,"velocity"],[214,18,280,14],[214,20,280,6,"velocity"],[214,28,279,50],[215,0,281,6,"bounciness"],[215,10,281,6,"bounciness"],[215,20,281,16],[215,22,281,18],[215,23,279,50],[216,0,282,6,"toValue"],[216,10,282,6,"toValue"],[216,17,282,13],[216,19,282,6,"toValue"],[216,26,279,50],[217,0,283,6,"useNativeDriver"],[217,10,283,6,"useNativeDriver"],[217,25,283,21],[217,27,283,23],[217,33,283,28,"props"],[217,38,283,23],[217,39,283,34,"useNativeAnimations"],[218,0,279,50],[218,9,279,4],[218,11,284,7,"start"],[218,16,279,4],[218,17,284,13],[218,34,284,31],[219,0,284,31],[219,14,284,16,"finished"],[219,22,284,31],[219,31,284,16,"finished"],[219,39,284,31],[221,0,285,6],[221,14,285,10,"finished"],[221,22,285,6],[221,24,285,20],[222,0,286,8],[222,18,286,13,"_emitStateChanged"],[222,35,286,8],[222,36,286,31,"IDLE"],[222,40,286,8],[222,42,286,37,"willShow"],[222,50,286,8],[224,0,287,8],[224,16,287,12,"willShow"],[224,24,287,8],[224,26,287,22],[225,0,288,10],[225,20,288,15,"props"],[225,25,288,10],[225,26,288,21,"onDrawerOpen"],[225,38,288,10],[225,42,288,37],[225,48,288,42,"props"],[225,53,288,37],[225,54,288,48,"onDrawerOpen"],[225,66,288,37],[225,68,288,10],[226,0,289,9],[226,13,287,8],[226,19,289,15],[227,0,290,10],[227,20,290,15,"props"],[227,25,290,10],[227,26,290,21,"onDrawerClose"],[227,39,290,10],[227,43,290,38],[227,49,290,43,"props"],[227,54,290,38],[227,55,290,49,"onDrawerClose"],[227,68,290,38],[227,70,290,10],[228,0,291,9],[229,0,292,7],[230,0,293,5],[230,9,279,4],[231,0,294,3],[231,7,88,45],[233,0,88,45],[233,12,296,2,"openDrawer"],[233,22,88,45],[233,25,296,15],[233,37,296,59],[234,0,296,59],[234,12,296,16,"options"],[234,19,296,59],[234,90,296,52],[234,92,296,59],[236,0,297,4],[236,14,297,9,"_animateDrawer"],[236,28,297,4],[236,29,298,6,"undefined"],[236,38,297,4],[236,40,299,6],[236,46,299,11,"props"],[236,51,299,6],[236,52,299,17,"drawerWidth"],[236,63,297,4],[236,65,300,6,"options"],[236,72,300,13],[236,73,300,14,"velocity"],[236,81,300,6],[236,84,300,25,"options"],[236,91,300,32],[236,92,300,33,"velocity"],[236,100,300,6],[236,103,300,44],[236,104,297,4],[237,0,302,3],[237,7,88,45],[239,0,88,45],[239,12,304,2,"closeDrawer"],[239,23,88,45],[239,26,304,16],[239,38,304,60],[240,0,304,60],[240,12,304,17,"options"],[240,19,304,60],[240,90,304,53],[240,92,304,60],[242,0,305,4],[242,14,305,9,"_animateDrawer"],[242,28,305,4],[242,29,305,24,"undefined"],[242,38,305,4],[242,40,305,35],[242,41,305,4],[242,43,305,38,"options"],[242,50,305,45],[242,51,305,46,"velocity"],[242,59,305,38],[242,62,305,57,"options"],[242,69,305,64],[242,70,305,65,"velocity"],[242,78,305,38],[242,81,305,76],[242,82,305,4],[243,0,306,3],[243,7,88,45],[245,0,88,45],[245,12,308,2,"_renderOverlay"],[245,26,88,45],[245,29,308,19],[245,41,308,25],[246,0,310,4],[246,32,310,14],[246,38,310,19,"_openValue"],[246,48,310,4],[246,50,310,31],[246,65,310,4],[248,0,311,4],[248,12,311,10,"overlayOpacity"],[248,26,311,24],[248,29,311,27],[248,35,311,32,"_openValue"],[248,45,311,27],[248,46,311,43,"interpolate"],[248,57,311,27],[248,58,311,55],[249,0,312,6,"inputRange"],[249,10,312,6,"inputRange"],[249,20,312,16],[249,22,312,18],[249,23,312,19],[249,24,312,18],[249,26,312,22],[249,27,312,18],[249,28,311,55],[250,0,313,6,"outputRange"],[250,10,313,6,"outputRange"],[250,21,313,17],[250,23,313,19],[250,24,313,20],[250,25,313,19],[250,27,313,23],[250,30,313,19],[250,31,311,55],[251,0,314,6,"extrapolate"],[251,10,314,6,"extrapolate"],[251,21,314,17],[251,23,314,19],[252,0,311,55],[252,9,311,27],[252,10,311,4],[254,0,316,4],[254,12,316,10,"dynamicOverlayStyles"],[254,32,316,30],[254,35,316,33],[255,0,317,6,"opacity"],[255,10,317,6,"opacity"],[255,17,317,13],[255,19,317,15,"overlayOpacity"],[255,33,316,33],[256,0,318,6,"backgroundColor"],[256,10,318,6,"backgroundColor"],[256,25,318,21],[256,27,318,23],[256,33,318,28,"props"],[256,38,318,23],[256,39,318,34,"overlayColor"],[257,0,316,33],[257,9,316,4],[258,0,320,4],[258,15,321,6],[258,44,321,7],[258,88,321,6],[259,0,321,25],[259,10,321,25],[259,30,321,45],[259,32,321,47],[259,38,321,52,"_onTapHandlerStateChange"],[259,62,321,6],[260,0,321,6],[261,0,321,6],[262,0,321,6],[263,0,321,6],[264,0,321,6],[264,11,322,8],[264,40,322,9],[264,61,322,8],[264,62,322,18],[264,66,322,8],[265,0,323,10],[265,10,323,10],[265,23,323,23],[265,25,323,25],[265,31,323,30,"state"],[265,36,323,25],[265,37,323,36,"drawerShown"],[265,48,323,25],[265,51,323,50],[265,57,323,25],[265,60,323,59],[265,66,322,8],[266,0,324,10],[266,10,324,10],[266,15,324,15],[266,17,324,17],[266,18,324,18,"styles"],[266,24,324,24],[266,25,324,25,"overlay"],[266,32,324,17],[266,34,324,34,"dynamicOverlayStyles"],[266,54,324,17],[266,55,322,8],[267,0,322,8],[268,0,322,8],[269,0,322,8],[270,0,322,8],[271,0,322,8],[271,10,321,6],[271,11,320,4],[272,0,328,3],[272,7,88,45],[274,0,88,45],[274,12,330,2,"_renderDrawer"],[274,25,88,45],[274,28,330,18],[274,40,330,24],[275,0,330,24],[275,12,331,12,"drawerShown"],[275,23,330,24],[275,26,331,28],[275,32,331,33,"state"],[275,37,330,24],[275,38,331,12,"drawerShown"],[275,49,330,24],[276,0,330,24],[276,27,338,8],[276,33,338,13,"props"],[276,38,330,24],[277,0,330,24],[277,12,333,6,"drawerBackgroundColor"],[277,33,330,24],[277,49,333,6,"drawerBackgroundColor"],[277,70,330,24],[278,0,330,24],[278,12,334,6,"drawerWidth"],[278,23,330,24],[278,39,334,6,"drawerWidth"],[278,50,330,24],[279,0,330,24],[279,12,335,6,"drawerPosition"],[279,26,330,24],[279,42,335,6,"drawerPosition"],[279,56,330,24],[280,0,330,24],[280,12,336,6,"drawerType"],[280,22,330,24],[280,38,336,6,"drawerType"],[280,48,330,24],[281,0,330,24],[281,12,337,6,"contentContainerStyle"],[281,33,330,24],[281,49,337,6,"contentContainerStyle"],[281,70,330,24],[282,0,340,4],[282,12,340,10,"fromLeft"],[282,20,340,18],[282,23,340,21,"drawerPosition"],[282,37,340,35],[282,42,340,40],[282,48,340,4],[283,0,341,4],[283,12,341,10,"drawerSlide"],[283,23,341,21],[283,26,341,24,"drawerType"],[283,36,341,34],[283,41,341,39],[283,47,341,4],[284,0,342,4],[284,12,342,10,"containerSlide"],[284,26,342,24],[284,29,342,27,"drawerType"],[284,39,342,37],[284,44,342,42],[284,51,342,4],[285,0,344,4],[285,12,344,10,"dynamicDrawerStyles"],[285,31,344,29],[285,34,344,32],[286,0,345,6,"backgroundColor"],[286,10,345,6,"backgroundColor"],[286,25,345,21],[286,27,345,23,"drawerBackgroundColor"],[286,48,344,32],[287,0,346,6,"width"],[287,10,346,6,"width"],[287,15,346,11],[287,17,346,13,"drawerWidth"],[288,0,344,32],[288,9,344,4],[289,0,348,4],[289,12,348,10,"openValue"],[289,21,348,19],[289,24,348,22],[289,30,348,27,"_openValue"],[289,40,348,4],[290,0,349,4],[290,32,349,14,"openValue"],[290,41,349,4],[290,43,349,25],[290,58,349,4],[291,0,351,4],[291,12,351,8,"containerStyles"],[291,27,351,4],[293,0,352,4],[293,12,352,8,"containerSlide"],[293,26,352,4],[293,28,352,24],[294,0,353,6],[294,14,353,12,"containerTranslateX"],[294,33,353,31],[294,36,353,34,"openValue"],[294,45,353,43],[294,46,353,44,"interpolate"],[294,57,353,34],[294,58,353,56],[295,0,354,8,"inputRange"],[295,12,354,8,"inputRange"],[295,22,354,18],[295,24,354,20],[295,25,354,21],[295,26,354,20],[295,28,354,24],[295,29,354,20],[295,30,353,56],[296,0,355,8,"outputRange"],[296,12,355,8,"outputRange"],[296,23,355,19],[296,25,355,21,"fromLeft"],[296,33,355,29],[296,36,355,32],[296,37,355,33],[296,38,355,32],[296,40,355,36,"drawerWidth"],[296,51,355,32],[296,52,355,29],[296,55,355,51],[296,56,355,52],[296,57,355,51],[296,59,355,55],[296,60,355,56,"drawerWidth"],[296,71,355,51],[296,72,353,56],[297,0,356,8,"extrapolate"],[297,12,356,8,"extrapolate"],[297,23,356,19],[297,25,356,21],[298,0,353,56],[298,11,353,34],[298,12,353,6],[299,0,358,6,"containerStyles"],[299,10,358,6,"containerStyles"],[299,25,358,21],[299,28,358,24],[300,0,359,8,"transform"],[300,12,359,8,"transform"],[300,21,359,17],[300,23,359,19],[300,24,359,20],[301,0,359,22,"translateX"],[301,14,359,22,"translateX"],[301,24,359,32],[301,26,359,34,"containerTranslateX"],[302,0,359,20],[302,13,359,19],[303,0,358,24],[303,11,358,6],[304,0,361,5],[306,0,363,4],[306,12,363,8,"drawerTranslateX"],[306,28,363,24],[306,31,363,27],[306,32,363,4],[308,0,364,4],[308,12,364,8,"drawerSlide"],[308,23,364,4],[308,25,364,21],[309,0,365,6],[309,14,365,12,"closedDrawerOffset"],[309,32,365,30],[309,35,365,33,"fromLeft"],[309,43,365,41],[309,46,365,44],[309,47,365,45,"drawerWidth"],[309,58,365,41],[309,61,365,59,"drawerWidth"],[309,72,365,6],[310,0,366,6,"drawerTranslateX"],[310,10,366,6,"drawerTranslateX"],[310,26,366,22],[310,29,366,25,"openValue"],[310,38,366,34],[310,39,366,35,"interpolate"],[310,50,366,25],[310,51,366,47],[311,0,367,8,"inputRange"],[311,12,367,8,"inputRange"],[311,22,367,18],[311,24,367,20],[311,25,367,21],[311,26,367,20],[311,28,367,24],[311,29,367,20],[311,30,366,47],[312,0,368,8,"outputRange"],[312,12,368,8,"outputRange"],[312,23,368,19],[312,25,368,21],[312,26,368,22,"closedDrawerOffset"],[312,44,368,21],[312,46,368,42],[312,47,368,21],[312,48,366,47],[313,0,369,8,"extrapolate"],[313,12,369,8,"extrapolate"],[313,23,369,19],[313,25,369,21],[314,0,366,47],[314,11,366,25],[314,12,366,6],[315,0,371,5],[317,0,372,4],[317,12,372,10,"drawerStyles"],[317,24,372,22],[317,27,372,25],[318,0,373,6,"transform"],[318,10,373,6,"transform"],[318,19,373,15],[318,21,373,17],[318,22,373,18],[319,0,373,20,"translateX"],[319,12,373,20,"translateX"],[319,22,373,30],[319,24,373,32,"drawerTranslateX"],[320,0,373,18],[320,11,373,17],[320,12,372,25],[321,0,374,6,"flexDirection"],[321,10,374,6,"flexDirection"],[321,23,374,19],[321,25,374,21,"fromLeft"],[321,33,374,29],[321,36,374,32],[321,41,374,29],[321,44,374,40],[322,0,372,25],[322,9,372,4],[323,0,377,4],[323,15,378,6],[323,44,378,7],[323,65,378,6],[323,66,378,16],[323,70,378,6],[324,0,378,21],[324,10,378,21],[324,15,378,26],[324,17,378,28,"styles"],[324,23,378,34],[324,24,378,35,"main"],[324,28,378,6],[325,0,378,41],[325,10,378,41],[325,18,378,49],[325,20,378,51],[325,26,378,56,"_handleContainerLayout"],[325,48,378,6],[326,0,378,6],[327,0,378,6],[328,0,378,6],[329,0,378,6],[330,0,378,6],[330,11,379,8],[330,40,379,9],[330,61,379,8],[330,62,379,18],[330,66,379,8],[331,0,380,10],[331,10,380,10],[331,15,380,15],[331,17,380,17],[331,18,381,12,"drawerType"],[331,28,381,22],[331,33,381,27],[331,40,381,12],[331,43,382,16,"styles"],[331,49,382,22],[331,50,382,23,"containerOnBack"],[331,65,381,12],[331,68,383,16,"styles"],[331,74,383,22],[331,75,383,23,"containerInFront"],[331,91,380,17],[331,93,384,12,"containerStyles"],[331,108,380,17],[331,110,385,12,"contentContainerStyle"],[331,131,380,17],[331,132,379,8],[332,0,379,8],[333,0,379,8],[334,0,379,8],[335,0,379,8],[336,0,379,8],[336,11,387,11],[336,18,387,18],[336,24,387,23,"props"],[336,29,387,18],[336,30,387,29,"children"],[336,38,387,11],[336,43,387,42],[336,53,387,11],[336,56,388,14],[336,62,388,19,"props"],[336,67,388,14],[336,68,388,25,"children"],[336,76,388,14],[336,77,388,34],[336,83,388,39,"_openValue"],[336,93,388,14],[336,94,387,11],[336,97,389,14],[336,103,389,19,"props"],[336,108,389,14],[336,109,389,25,"children"],[336,117,379,8],[336,119,390,11],[336,125,390,16,"_renderOverlay"],[336,139,390,11],[336,141,379,8],[336,142,378,6],[336,144,392,8],[336,173,392,9],[336,194,392,8],[336,195,392,18],[336,199,392,8],[337,0,393,10],[337,10,393,10],[337,23,393,23],[337,25,393,24],[337,35,392,8],[338,0,394,10],[338,10,394,10],[338,34,394,34],[338,36,394,36,"drawerShown"],[338,47,392,8],[339,0,395,10],[339,10,395,10],[339,15,395,15],[339,17,395,17],[339,18,395,18,"styles"],[339,24,395,24],[339,25,395,25,"drawerContainer"],[339,40,395,17],[339,42,395,42,"drawerStyles"],[339,54,395,17],[339,55,392,8],[340,0,392,8],[341,0,392,8],[342,0,392,8],[343,0,392,8],[344,0,392,8],[344,11,396,10],[344,40,396,11],[344,57,396,10],[345,0,396,16],[345,10,396,16],[345,15,396,21],[345,17,396,23],[345,18,396,24,"styles"],[345,24,396,30],[345,25,396,31,"drawer"],[345,31,396,23],[345,33,396,39,"dynamicDrawerStyles"],[345,52,396,23],[345,53,396,10],[346,0,396,10],[347,0,396,10],[348,0,396,10],[349,0,396,10],[350,0,396,10],[350,11,397,13],[350,17,397,18,"props"],[350,22,397,13],[350,23,397,24,"renderNavigationView"],[350,43,397,13],[350,44,397,45],[350,50,397,50,"_openValue"],[350,60,397,13],[350,61,396,10],[350,62,392,8],[350,63,378,6],[350,64,377,4],[351,0,402,3],[351,7,88,45],[353,0,91,4],[353,10,91,10,"dragX"],[353,16,91,15],[353,19,91,18],[353,23,91,22,"Animated"],[353,45,91,31,"Value"],[353,50,91,18],[353,51,91,37],[353,52,91,18],[353,53,91,4],[355,0,92,4],[355,10,92,10,"touchX"],[355,17,92,16],[355,20,92,19],[355,24,92,23,"Animated"],[355,46,92,32,"Value"],[355,51,92,19],[355,52,92,38],[355,53,92,19],[355,54,92,4],[357,0,93,4],[357,10,93,10,"drawerTranslation"],[357,28,93,27],[357,31,93,30],[357,35,93,34,"Animated"],[357,57,93,43,"Value"],[357,62,93,30],[357,63,93,49],[357,64,93,30],[357,65,93,4],[359,0,95,4],[359,12,95,9,"state"],[359,17,95,4],[359,20,95,17],[360,0,96,6,"dragX"],[360,8,96,6,"dragX"],[360,13,96,11],[360,15,96,6,"dragX"],[360,21,95,17],[361,0,97,6,"touchX"],[361,8,97,6,"touchX"],[361,14,97,12],[361,16,97,6,"touchX"],[361,23,95,17],[362,0,98,6,"drawerTranslation"],[362,8,98,6,"drawerTranslation"],[362,25,98,23],[362,27,98,6,"drawerTranslation"],[362,45,95,17],[363,0,99,6,"drawerShown"],[363,8,99,6,"drawerShown"],[363,19,99,17],[363,21,99,19],[363,26,95,17],[364,0,100,6,"containerWidth"],[364,8,100,6,"containerWidth"],[364,22,100,20],[364,24,100,22],[365,0,95,17],[365,7,95,4],[367,0,103,4],[367,12,103,9,"_updateAnimatedEvent"],[367,32,103,4],[367,33,103,30,"props"],[367,39,103,4],[367,41,103,37],[367,47,103,42,"state"],[367,52,103,4],[369,0,88,45],[370,0,104,3],[374,42,106,22,"props"],[374,47],[374,49,106,39,"state"],[374,54],[374,56,106,57],[375,0,107,4],[375,12,108,6],[375,17,108,11,"props"],[375,22,108,6],[375,23,108,17,"drawerPosition"],[375,37,108,6],[375,42,108,36,"props"],[375,47,108,41],[375,48,108,42,"drawerPosition"],[375,62,108,6],[375,66,109,6],[375,71,109,11,"props"],[375,76,109,6],[375,77,109,17,"drawerWidth"],[375,88,109,6],[375,93,109,33,"props"],[375,98,109,38],[375,99,109,39,"drawerWidth"],[375,110,108,6],[375,114,110,6],[375,119,110,11,"props"],[375,124,110,6],[375,125,110,17,"drawerType"],[375,135,110,6],[375,140,110,32,"props"],[375,145,110,37],[375,146,110,38,"drawerType"],[375,156,108,6],[375,160,111,6],[375,165,111,11,"state"],[375,170,111,6],[375,171,111,17,"containerWidth"],[375,185,111,6],[375,190,111,36,"state"],[375,195,111,41],[375,196,111,42,"containerWidth"],[375,210,107,4],[375,212,112,6],[376,0,113,6],[376,15,113,11,"_updateAnimatedEvent"],[376,35,113,6],[376,36,113,32,"props"],[376,41,113,6],[376,43,113,39,"state"],[376,48,113,6],[377,0,114,5],[378,0,115,3],[381,31,404,11],[382,0,404,11],[382,27,405,44],[382,32,405,49,"state"],[382,37,404,11],[383,0,404,11],[383,12,405,12,"drawerShown"],[383,23,404,11],[383,39,405,12,"drawerShown"],[383,50,404,11],[384,0,404,11],[384,12,405,25,"containerWidth"],[384,26,404,11],[384,42,405,25,"containerWidth"],[384,56,404,11],[385,0,404,11],[385,27,412,8],[385,32,412,13,"props"],[385,37,404,11],[386,0,404,11],[386,12,408,6,"drawerPosition"],[386,26,404,11],[386,42,408,6,"drawerPosition"],[386,56,404,11],[387,0,404,11],[387,12,409,6,"drawerType"],[387,22,404,11],[387,38,409,6,"drawerType"],[387,48,404,11],[388,0,404,11],[388,12,410,6,"edgeWidth"],[388,21,404,11],[388,37,410,6,"edgeWidth"],[388,46,404,11],[389,0,404,11],[389,12,411,6,"minSwipeDistance"],[389,28,404,11],[389,44,411,6,"minSwipeDistance"],[389,60,404,11],[390,0,414,4],[390,12,414,10,"fromLeft"],[390,20,414,18],[390,23,414,21,"drawerPosition"],[390,37,414,35],[390,42,414,40],[390,48,414,4],[391,0,419,4],[391,12,419,10,"gestureOrientation"],[391,30,419,28],[391,33,419,31],[391,34,419,32,"fromLeft"],[391,42,419,40],[391,45,419,43],[391,46,419,40],[391,49,419,47],[391,50,419,48],[391,51,419,31],[391,56,419,54,"drawerShown"],[391,67,419,65],[391,70,419,68],[391,71,419,69],[391,72,419,65],[391,75,419,73],[391,76,419,31],[391,77,419,4],[392,0,424,4],[392,12,424,10,"hitSlop"],[392,19,424,17],[392,22,424,20,"fromLeft"],[392,30,424,28],[392,33,425,8],[393,0,425,10,"right"],[393,10,425,10,"right"],[393,15,425,15],[393,17,425,17,"drawerShown"],[393,28,425,28],[393,31,425,31],[393,32,425,28],[393,35,425,35,"edgeWidth"],[393,44,425,44],[393,47,425,47,"containerWidth"],[394,0,425,8],[394,9,424,28],[394,12,426,8],[395,0,426,10,"left"],[395,10,426,10,"left"],[395,14,426,14],[395,16,426,16,"drawerShown"],[395,27,426,27],[395,30,426,30],[395,31,426,27],[395,34,426,34,"edgeWidth"],[395,43,426,43],[395,46,426,46,"containerWidth"],[396,0,426,8],[396,9,424,4],[397,0,428,4],[397,15,429,6],[397,44,429,7],[397,88,429,6],[398,0,430,8],[398,10,430,8],[398,17,430,15],[398,19,430,17,"hitSlop"],[398,26,429,6],[399,0,431,8],[399,10,431,8],[399,20,431,18],[399,22,431,20,"gestureOrientation"],[399,40,431,38],[399,43,431,41,"minSwipeDistance"],[399,59,429,6],[400,0,432,8],[400,10,432,8],[400,24,432,22],[400,26,432,24],[400,31,432,29,"_onGestureEvent"],[400,46,429,6],[401,0,433,8],[401,10,433,8],[401,30,433,28],[401,32,433,30],[401,37,433,35,"_openingHandlerStateChange"],[401,63,429,6],[402,0,429,6],[403,0,429,6],[404,0,429,6],[405,0,429,6],[406,0,429,6],[406,11,434,9],[406,16,434,14,"_renderDrawer"],[406,29,434,9],[406,31,429,6],[406,32,428,4],[407,0,437,3],[410,4,70,42,"Component"],[410,20],[410,30,71,9,"defaultProps"],[410,42],[410,45,71,24],[411,0,72,4,"drawerWidth"],[411,4,72,4,"drawerWidth"],[411,15,72,15],[411,17,72,17],[411,20,71,24],[412,0,73,4,"drawerPosition"],[412,4,73,4,"drawerPosition"],[412,18,73,18],[412,20,73,20],[412,26,71,24],[413,0,74,4,"useNativeAnimations"],[413,4,74,4,"useNativeAnimations"],[413,23,74,23],[413,25,74,25],[413,29,71,24],[414,0,75,4,"drawerType"],[414,4,75,4,"drawerType"],[414,14,75,14],[414,16,75,16],[414,23,71,24],[415,0,76,4,"edgeWidth"],[415,4,76,4,"edgeWidth"],[415,13,76,13],[415,15,76,15],[415,17,71,24],[416,0,77,4,"minSwipeDistance"],[416,4,77,4,"minSwipeDistance"],[416,20,77,20],[416,22,77,22],[416,23,71,24],[417,0,78,4,"overlayColor"],[417,4,78,4,"overlayColor"],[417,16,78,16],[417,18,78,18],[418,0,71,24],[418,3],[418,12,81,9,"positions"],[418,21],[418,24,81,21],[419,0,82,4,"Left"],[419,4,82,4,"Left"],[419,8,82,8],[419,10,82,10],[419,16,81,21],[420,0,83,4,"Right"],[420,4,83,4,"Right"],[420,9,83,9],[420,11,83,11],[421,0,81,21],[421,3],[426,0,440,0],[426,6,440,6,"styles"],[426,12,440,12],[426,15,440,15,"StyleSheet"],[426,39,440,26,"create"],[426,45,440,15],[426,46,440,33],[427,0,441,2,"drawer"],[427,4,441,2,"drawer"],[427,10,441,8],[427,12,441,10],[428,0,441,12,"flex"],[428,6,441,12,"flex"],[428,10,441,16],[428,12,441,18],[429,0,441,10],[429,5,440,33],[430,0,442,2,"drawerContainer"],[430,4,442,2,"drawerContainer"],[430,19,442,17],[430,53,443,7,"StyleSheet"],[430,77,443,18,"absoluteFillObject"],[430,95,442,17],[431,0,444,4,"zIndex"],[431,6,444,4,"zIndex"],[431,12,444,10],[431,14,444,12],[431,18,442,17],[432,0,445,4,"flexDirection"],[432,6,445,4,"flexDirection"],[432,19,445,17],[432,21,445,19],[433,0,442,17],[433,6,440,33],[434,0,447,2,"containerInFront"],[434,4,447,2,"containerInFront"],[434,20,447,18],[434,54,448,7,"StyleSheet"],[434,78,448,18,"absoluteFillObject"],[434,96,447,18],[435,0,449,4,"zIndex"],[435,6,449,4,"zIndex"],[435,12,449,10],[435,14,449,12],[436,0,447,18],[436,6,440,33],[437,0,451,2,"containerOnBack"],[437,4,451,2,"containerOnBack"],[437,19,451,17],[437,53,452,7,"StyleSheet"],[437,77,452,18,"absoluteFillObject"],[437,95,451,17],[437,96,440,33],[438,0,454,2,"main"],[438,4,454,2,"main"],[438,8,454,6],[438,10,454,8],[439,0,455,4,"flex"],[439,6,455,4,"flex"],[439,10,455,8],[439,12,455,10],[439,13,454,8],[440,0,456,4,"zIndex"],[440,6,456,4,"zIndex"],[440,12,456,10],[440,14,456,12],[440,15,454,8],[441,0,457,4,"overflow"],[441,6,457,4,"overflow"],[441,14,457,12],[441,16,457,14],[442,0,454,8],[442,5,440,33],[443,0,459,2,"overlay"],[443,4,459,2,"overlay"],[443,11,459,9],[443,45,460,7,"StyleSheet"],[443,69,460,18,"absoluteFillObject"],[443,87,459,9],[444,0,461,4,"zIndex"],[444,6,461,4,"zIndex"],[444,12,461,10],[444,14,461,12],[445,0,459,9],[446,0,440,33],[446,3,440,15],[446,4,440,0]]},"type":"js/module"}]}