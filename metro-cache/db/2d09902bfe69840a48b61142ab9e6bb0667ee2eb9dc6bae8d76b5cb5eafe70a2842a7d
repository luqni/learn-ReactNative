{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"react-native-gesture-handler","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[10], \"react-native\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../utils/invariant\"));\n\n  var _reactNativeGestureHandler = _$$_REQUIRE(_dependencyMap[12], \"react-native-gesture-handler\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/root21/Bootcamp/Course_ReactNative/react1/node_modules/react-navigation-drawer/dist/views/DrawerLayout.js\";\n\n  var _components = {\n    DrawerLayout: {\n      displayName: \"DrawerLayout\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/root21/Bootcamp/Course_ReactNative/react1/node_modules/react-navigation-drawer/dist/views/DrawerLayout.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  var DrawerLayout = _wrapComponent(\"DrawerLayout\")((_temp = _class = function (_Component) {\n    (0, _inherits2.default)(DrawerLayout, _Component);\n\n    function DrawerLayout(_props, context) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerLayout).call(this, _props, context));\n\n      _this._updateAnimatedEvent = function (props, state) {\n        var drawerPosition = props.drawerPosition,\n            drawerWidth = props.drawerWidth,\n            drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n            touchXValue = state.touchX,\n            drawerTranslation = state.drawerTranslation,\n            containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n\n        if (drawerPosition !== 'left') {\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        var translationX = dragX;\n\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);\n        }\n\n        _this._openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        _this._onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], {\n          useNativeDriver: props.useNativeAnimations\n        });\n      };\n\n      _this._handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n\n      _this._emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged && _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n\n      _this._openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n\n        if (nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE) {\n          _this._handleRelease(nativeEvent);\n        } else if (nativeEvent.state === _reactNativeGestureHandler.State.ACTIVE) {\n          _this._emitStateChanged(DRAGGING, false);\n\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n\n      _this._onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n\n        if (_this.state.drawerShown && nativeEvent.oldState === _reactNativeGestureHandler.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n\n      _this._handleRelease = function (nativeEvent) {\n        var _this$props = _this.props,\n            drawerWidth = _this$props.drawerWidth,\n            drawerPosition = _this$props.drawerPosition,\n            drawerType = _this$props.drawerType;\n        var _this$state = _this.state,\n            drawerShown = _this$state.drawerShown,\n            containerWidth = _this$state.containerWidth;\n        var dragX = nativeEvent.translationX,\n            velocityX = nativeEvent.velocityX,\n            touchX = nativeEvent.x;\n\n        if (drawerPosition !== 'left') {\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n\n        if (shouldOpen) {\n          _this._animateDrawer({\n            fromValue: startOffsetX,\n            toValue: drawerWidth,\n            velocity: velocityX\n          });\n        } else {\n          _this._animateDrawer({\n            fromValue: startOffsetX,\n            toValue: 0,\n            velocity: velocityX\n          });\n        }\n      };\n\n      _this._animateDrawer = function (_ref4) {\n        var fromValue = _ref4.fromValue,\n            toValue = _ref4.toValue,\n            velocity = _ref4.velocity;\n\n        _this.state.dragX.setValue(0);\n\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n\n        if (typeof fromValue === 'number') {\n          _this.state.drawerTranslation.setValue(fromValue);\n        }\n\n        var willShow = toValue !== 0;\n\n        _this.setState({\n          drawerShown: willShow\n        });\n\n        _this._emitStateChanged(SETTLING, willShow);\n\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations\n        }).start(function (_ref5) {\n          var finished = _ref5.finished;\n\n          if (finished) {\n            _this._emitStateChanged(IDLE, willShow);\n\n            if (willShow) {\n              _this.props.onDrawerOpen && _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose && _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer({\n          toValue: _this.props.drawerWidth,\n          velocity: options.velocity ? options.velocity : 0\n        });\n      };\n\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer({\n          toValue: 0,\n          velocity: options.velocity ? options.velocity : 0\n        });\n      };\n\n      _this._renderOverlay = function () {\n        (0, _invariant.default)(_this._openValue, 'should be set');\n\n        var overlayOpacity = _this._openValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 0.7],\n          extrapolate: 'clamp'\n        });\n\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return _react.default.createElement(_reactNativeGestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this._onTapHandlerStateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: _this.state.drawerShown ? 'auto' : 'none',\n          style: [styles.overlay, dynamicOverlayStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          }\n        }));\n      };\n\n      _this._renderDrawer = function () {\n        var drawerShown = _this.state.drawerShown;\n        var _this$props2 = _this.props,\n            drawerBackgroundColor = _this$props2.drawerBackgroundColor,\n            drawerWidth = _this$props2.drawerWidth,\n            drawerPosition = _this$props2.drawerPosition,\n            drawerType = _this$props2.drawerType,\n            contentContainerStyle = _this$props2.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this._openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n\n        var drawerTranslateX = 0;\n\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          drawerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [closedDrawerOffset, 0],\n            extrapolate: 'clamp'\n          });\n        }\n\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: (_reactNative.I18nManager.isRTL ? !fromLeft : fromLeft) ? 'row' : 'row-reverse'\n        };\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this._handleContainerLayout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323\n          }\n        }, typeof _this.props.children === 'function' ? _this.props.children(_this._openValue) : _this.props.children, _this._renderOverlay()), _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: \"box-none\",\n          accessibilityViewIsModal: drawerShown,\n          style: [styles.drawerContainer, drawerStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: [styles.drawer, dynamicDrawerStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          }\n        }, _this.props.renderNavigationView(_this._openValue))));\n      };\n\n      var _dragX = new _reactNative.Animated.Value(0);\n\n      var _touchX = new _reactNative.Animated.Value(0);\n\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        drawerShown: false,\n        containerWidth: 0\n      };\n\n      _this._updateAnimatedEvent(_props, _this.state);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerLayout, [{\n      key: \"componentWillUpdate\",\n      value: function componentWillUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this._updateAnimatedEvent(props, state);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$state2 = this.state,\n            drawerShown = _this$state2.drawerShown,\n            containerWidth = _this$state2.containerWidth;\n        var _this$props3 = this.props,\n            drawerPosition = _this$props3.drawerPosition,\n            drawerType = _this$props3.drawerType,\n            drawerLockMode = _this$props3.drawerLockMode,\n            edgeWidth = _this$props3.edgeWidth,\n            minSwipeDistance = _this$props3.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          right: drawerShown ? 0 : edgeWidth - containerWidth\n        } : {\n          left: drawerShown ? 0 : edgeWidth - containerWidth\n        };\n        return _react.default.createElement(_reactNativeGestureHandler.PanGestureHandler, {\n          hitSlop: hitSlop,\n          minOffsetX: gestureOrientation * minSwipeDistance,\n          maxDeltaY: 15,\n          onGestureEvent: this._onGestureEvent,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          onHandlerStateChange: this._openingHandlerStateChange,\n          ref: this.props.gestureRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          }\n        }, this._renderDrawer());\n      }\n    }]);\n    return DrawerLayout;\n  }(_react.Component), _class.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'black',\n    drawerLockMode: 'unlocked'\n  }, _class.positions = {\n    Left: 'left',\n    Right: 'right'\n  }, _temp));\n\n  var _default2 = DrawerLayout;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    drawer: {\n      flex: 0\n    },\n    drawerContainer: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: (0, _objectSpread2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","map":[[23,0,15,0],[27,0,16,0],[29,0,17,0],[31,0,19,0],[56,0,21,0],[56,6,21,6,"DRAG_TOSS"],[56,15,21,15],[56,18,21,18],[56,22,21,0],[57,0,23,0],[57,6,23,6,"IDLE"],[57,10,23,10],[57,13,23,13],[57,19,23,0],[58,0,24,0],[58,6,24,6,"DRAGGING"],[58,14,24,14],[58,17,24,17],[58,27,24,0],[59,0,25,0],[59,6,25,6,"SETTLING"],[59,14,25,14],[59,17,25,17],[59,27,25,0],[64,0,45,2],[64,26,45,14,"props"],[64,32,45,2],[64,34,45,21,"context"],[64,41,45,2],[64,43,45,30],[65,0,45,30],[67,0,45,30],[68,0,46,4],[68,116,46,10,"props"],[68,122,46,4],[68,124,46,17,"context"],[68,131,46,4],[70,0,45,30],[70,12,69,2,"_updateAnimatedEvent"],[70,32,45,30],[70,35,69,25],[70,45,69,26,"props"],[70,50,69,25],[70,52,69,33,"state"],[70,57,69,25],[70,59,69,43],[71,0,69,43],[71,12,71,12,"drawerPosition"],[71,26,69,43],[71,29,71,56,"props"],[71,34,69,43],[71,35,71,12,"drawerPosition"],[71,49,69,43],[72,0,69,43],[72,12,71,28,"drawerWidth"],[72,23,69,43],[72,26,71,56,"props"],[72,31,69,43],[72,32,71,28,"drawerWidth"],[72,43,69,43],[73,0,69,43],[73,12,71,41,"drawerType"],[73,22,69,43],[73,25,71,56,"props"],[73,30,69,43],[73,31,71,41,"drawerType"],[73,41,69,43],[74,0,69,43],[74,12,73,13,"dragXValue"],[74,22,69,43],[74,25,77,8,"state"],[74,30,69,43],[74,31,73,6,"dragX"],[74,36,69,43],[75,0,69,43],[75,12,74,14,"touchXValue"],[75,23,69,43],[75,26,77,8,"state"],[75,31,69,43],[75,32,74,6,"touchX"],[75,38,69,43],[76,0,69,43],[76,12,75,6,"drawerTranslation"],[76,29,69,43],[76,32,77,8,"state"],[76,37,69,43],[76,38,75,6,"drawerTranslation"],[76,55,69,43],[77,0,69,43],[77,12,76,6,"containerWidth"],[77,26,69,43],[77,29,77,8,"state"],[77,34,69,43],[77,35,76,6,"containerWidth"],[77,49,69,43],[78,0,79,4],[78,12,79,8,"dragX"],[78,17,79,13],[78,20,79,16,"dragXValue"],[78,30,79,4],[79,0,80,4],[79,12,80,8,"touchX"],[79,18,80,14],[79,21,80,17,"touchXValue"],[79,32,80,4],[81,0,82,4],[81,12,82,8,"drawerPosition"],[81,26,82,22],[81,31,82,27],[81,37,82,4],[81,39,82,35],[82,0,90,6,"dragX"],[82,10,90,6,"dragX"],[82,15,90,11],[82,18,90,14,"Animated"],[82,40,90,23,"multiply"],[82,48,90,14],[82,49,90,32],[82,53,90,36,"Animated"],[82,75,90,45,"Value"],[82,80,90,32],[82,81,90,51],[82,82,90,52],[82,83,90,32],[82,84,90,14],[82,86,90,56,"dragXValue"],[82,96,90,14],[82,97,90,6],[83,0,91,6,"touchX"],[83,10,91,6,"touchX"],[83,16,91,12],[83,19,91,15,"Animated"],[83,41,91,24,"add"],[83,44,91,15],[83,45,91,28],[83,49,91,32,"Animated"],[83,71,91,41,"Value"],[83,76,91,28],[83,77,91,47,"containerWidth"],[83,91,91,28],[83,92,91,15],[83,94,91,64,"Animated"],[83,116,91,73,"multiply"],[83,124,91,64],[83,125,91,82],[83,129,91,86,"Animated"],[83,151,91,95,"Value"],[83,156,91,82],[83,157,91,101],[83,158,91,102],[83,159,91,82],[83,160,91,64],[83,162,91,106,"touchXValue"],[83,173,91,64],[83,174,91,15],[83,175,91,6],[84,0,92,6,"touchXValue"],[84,10,92,6,"touchXValue"],[84,21,92,17],[84,22,92,18,"setValue"],[84,30,92,6],[84,31,92,27,"containerWidth"],[84,45,92,6],[85,0,93,5],[85,9,82,4],[85,15,93,11],[86,0,94,6,"touchXValue"],[86,10,94,6,"touchXValue"],[86,21,94,17],[86,22,94,18,"setValue"],[86,30,94,6],[86,31,94,27],[86,32,94,6],[87,0,95,5],[89,0,121,4],[89,12,121,8,"translationX"],[89,24,121,20],[89,27,121,23,"dragX"],[89,32,121,4],[91,0,122,4],[91,12,122,8,"drawerType"],[91,22,122,18],[91,27,122,23],[91,34,122,4],[91,36,122,32],[92,0,123,6],[92,14,123,12,"startPositionX"],[92,28,123,26],[92,31,123,29,"Animated"],[92,53,123,38,"add"],[92,56,123,29],[92,57,123,42,"touchX"],[92,63,123,29],[92,65,123,50,"Animated"],[92,87,123,59,"multiply"],[92,95,123,50],[92,96,123,68],[92,100,123,72,"Animated"],[92,122,123,81,"Value"],[92,127,123,68],[92,128,123,87],[92,129,123,88],[92,130,123,68],[92,131,123,50],[92,133,123,92,"dragX"],[92,138,123,50],[92,139,123,29],[92,140,123,6],[94,0,125,6],[94,14,125,12,"dragOffsetFromOnStartPosition"],[94,43,125,41],[94,46,125,44,"startPositionX"],[94,60,125,58],[94,61,125,59,"interpolate"],[94,72,125,44],[94,73,125,71],[95,0,126,8,"inputRange"],[95,12,126,8,"inputRange"],[95,22,126,18],[95,24,126,20],[95,25,126,21,"drawerWidth"],[95,36,126,32],[95,39,126,35],[95,40,126,20],[95,42,126,38,"drawerWidth"],[95,53,126,20],[95,55,126,51,"drawerWidth"],[95,66,126,62],[95,69,126,65],[95,70,126,20],[95,71,125,71],[96,0,127,8,"outputRange"],[96,12,127,8,"outputRange"],[96,23,127,19],[96,25,127,21],[96,26,127,22],[96,27,127,21],[96,29,127,25],[96,30,127,21],[96,32,127,28],[96,33,127,21],[97,0,125,71],[97,11,125,44],[97,12,125,6],[98,0,129,6,"translationX"],[98,10,129,6,"translationX"],[98,22,129,18],[98,25,129,21,"Animated"],[98,47,129,30,"add"],[98,50,129,21],[98,51,129,34,"dragX"],[98,56,129,21],[98,58,129,41,"dragOffsetFromOnStartPosition"],[98,87,129,21],[98,88,129,6],[99,0,130,5],[101,0,132,4],[101,14,132,9,"_openValue"],[101,24,132,4],[101,27,132,22,"Animated"],[101,49,132,31,"add"],[101,52,132,22],[101,53,132,35,"translationX"],[101,65,132,22],[101,67,132,49,"drawerTranslation"],[101,84,132,22],[101,86,132,68,"interpolate"],[101,97,132,22],[101,98,132,80],[102,0,133,6,"inputRange"],[102,10,133,6,"inputRange"],[102,20,133,16],[102,22,133,18],[102,23,133,19],[102,24,133,18],[102,26,133,22,"drawerWidth"],[102,37,133,18],[102,38,132,80],[103,0,134,6,"outputRange"],[103,10,134,6,"outputRange"],[103,21,134,17],[103,23,134,19],[103,24,134,20],[103,25,134,19],[103,27,134,23],[103,28,134,19],[103,29,132,80],[104,0,135,6,"extrapolate"],[104,10,135,6,"extrapolate"],[104,21,135,17],[104,23,135,19],[105,0,132,80],[105,9,132,22],[105,10,132,4],[106,0,138,4],[106,14,138,9,"_onGestureEvent"],[106,29,138,4],[106,32,138,27,"Animated"],[106,54,138,36,"event"],[106,59,138,27],[106,60,138,42],[106,61,138,43],[107,0,138,45,"nativeEvent"],[107,10,138,45,"nativeEvent"],[107,21,138,56],[107,23,138,58],[108,0,138,60,"translationX"],[108,12,138,60,"translationX"],[108,24,138,72],[108,26,138,74,"dragXValue"],[108,36,138,58],[109,0,138,86,"x"],[109,12,138,86,"x"],[109,13,138,87],[109,15,138,89,"touchXValue"],[110,0,138,58],[111,0,138,43],[111,9,138,42],[111,10,138,27],[111,12,138,107],[112,0,138,109,"useNativeDriver"],[112,10,138,109,"useNativeDriver"],[112,25,138,124],[112,27,138,126,"props"],[112,32,138,131],[112,33,138,132,"useNativeAnimations"],[113,0,138,107],[113,9,138,27],[113,10,138,4],[114,0,139,3],[114,7,45,30],[116,0,45,30],[116,12,141,2,"_handleContainerLayout"],[116,34,45,30],[116,37,141,27],[116,53,141,48],[117,0,141,48],[117,12,141,30,"nativeEvent"],[117,23,141,48],[117,31,141,30,"nativeEvent"],[117,42,141,48],[119,0,142,4],[119,14,142,9,"setState"],[119,22,142,4],[119,23,142,18],[120,0,142,20,"containerWidth"],[120,10,142,20,"containerWidth"],[120,24,142,34],[120,26,142,36,"nativeEvent"],[120,37,142,47],[120,38,142,48,"layout"],[120,44,142,36],[120,45,142,55,"width"],[121,0,142,18],[121,9,142,4],[122,0,143,3],[122,7,45,30],[124,0,45,30],[124,12,145,2,"_emitStateChanged"],[124,29,45,30],[124,32,145,22],[124,42,145,23,"newState"],[124,50,145,22],[124,52,145,33,"drawerWillShow"],[124,66,145,22],[124,68,145,52],[125,0,146,4],[125,14,146,9,"props"],[125,19,146,4],[125,20,146,15,"onDrawerStateChanged"],[125,40,146,4],[125,44,146,39],[125,50,146,44,"props"],[125,55,146,39],[125,56,146,50,"onDrawerStateChanged"],[125,76,146,39],[125,77,146,71,"newState"],[125,85,146,39],[125,87,146,81,"drawerWillShow"],[125,101,146,39],[125,102,146,4],[126,0,147,3],[126,7,45,30],[128,0,45,30],[128,12,149,2,"_openingHandlerStateChange"],[128,38,45,30],[128,41,149,31],[128,58,149,52],[129,0,149,52],[129,12,149,34,"nativeEvent"],[129,23,149,52],[129,32,149,34,"nativeEvent"],[129,43,149,52],[131,0,150,4],[131,12,150,8,"nativeEvent"],[131,23,150,19],[131,24,150,20,"oldState"],[131,32,150,8],[131,37,150,33,"State"],[131,70,150,39,"ACTIVE"],[131,76,150,4],[131,78,150,47],[132,0,151,6],[132,16,151,11,"_handleRelease"],[132,30,151,6],[132,31,151,26,"nativeEvent"],[132,42,151,6],[133,0,152,5],[133,9,150,4],[133,15,152,11],[133,19,152,15,"nativeEvent"],[133,30,152,26],[133,31,152,27,"state"],[133,36,152,15],[133,41,152,37,"State"],[133,74,152,43,"ACTIVE"],[133,80,152,11],[133,82,152,51],[134,0,153,6],[134,16,153,11,"_emitStateChanged"],[134,33,153,6],[134,34,153,29,"DRAGGING"],[134,42,153,6],[134,44,153,39],[134,49,153,6],[136,0,154,6],[136,14,154,10],[136,20,154,15,"props"],[136,25,154,10],[136,26,154,21,"keyboardDismissMode"],[136,45,154,10],[136,50,154,45],[136,59,154,6],[136,61,154,56],[137,0,155,8,"Keyboard"],[137,34,155,17,"dismiss"],[137,41,155,8],[138,0,156,7],[140,0,157,6],[140,14,157,10],[140,20,157,15,"props"],[140,25,157,10],[140,26,157,21,"hideStatusBar"],[140,39,157,6],[140,41,157,36],[141,0,158,8,"StatusBar"],[141,35,158,18,"setHidden"],[141,44,158,8],[141,45,158,28],[141,49,158,8],[141,51,158,34],[141,57,158,39,"props"],[141,62,158,34],[141,63,158,45,"statusBarAnimation"],[141,81,158,34],[141,85,158,67],[141,92,158,8],[142,0,159,7],[143,0,160,5],[144,0,161,3],[144,7,45,30],[146,0,45,30],[146,12,163,2,"_onTapHandlerStateChange"],[146,36,45,30],[146,39,163,29],[146,56,163,50],[147,0,163,50],[147,12,163,32,"nativeEvent"],[147,23,163,50],[147,32,163,32,"nativeEvent"],[147,43,163,50],[149,0,164,4],[149,12,164,8],[149,18,164,13,"state"],[149,23,164,8],[149,24,164,19,"drawerShown"],[149,35,164,8],[149,39,164,34,"nativeEvent"],[149,50,164,45],[149,51,164,46,"oldState"],[149,59,164,34],[149,64,164,59,"State"],[149,97,164,65,"ACTIVE"],[149,103,164,8],[149,107,164,75],[149,113,164,80,"props"],[149,118,164,75],[149,119,164,86,"drawerLockMode"],[149,133,164,75],[149,138,164,105],[149,151,164,4],[149,153,164,120],[150,0,165,6],[150,16,165,11,"closeDrawer"],[150,27,165,6],[151,0,166,5],[152,0,167,3],[152,7,45,30],[154,0,45,30],[154,12,169,2,"_handleRelease"],[154,26,45,30],[154,29,169,19],[154,39,169,19,"nativeEvent"],[154,50,169,30],[154,52,169,34],[155,0,169,34],[155,26,170,56],[155,32,170,61,"props"],[155,37,169,34],[156,0,169,34],[156,12,170,12,"drawerWidth"],[156,23,169,34],[156,38,170,12,"drawerWidth"],[156,49,169,34],[157,0,169,34],[157,12,170,25,"drawerPosition"],[157,26,169,34],[157,41,170,25,"drawerPosition"],[157,55,169,34],[158,0,169,34],[158,12,170,41,"drawerType"],[158,22,169,34],[158,37,170,41,"drawerType"],[158,47,169,34],[159,0,169,34],[159,26,171,44],[159,32,171,49,"state"],[159,37,169,34],[160,0,169,34],[160,12,171,12,"drawerShown"],[160,23,169,34],[160,38,171,12,"drawerShown"],[160,49,169,34],[161,0,169,34],[161,12,171,25,"containerWidth"],[161,26,169,34],[161,41,171,25,"containerWidth"],[161,55,169,34],[162,0,169,34],[162,12,172,24,"dragX"],[162,17,169,34],[162,20,172,56,"nativeEvent"],[162,31,169,34],[162,32,172,10,"translationX"],[162,44,169,34],[163,0,169,34],[163,12,172,31,"velocityX"],[163,21,169,34],[163,24,172,56,"nativeEvent"],[163,35,169,34],[163,36,172,31,"velocityX"],[163,45,169,34],[164,0,169,34],[164,12,172,45,"touchX"],[164,18,169,34],[164,21,172,56,"nativeEvent"],[164,32,169,34],[164,33,172,42,"x"],[164,34,169,34],[166,0,174,4],[166,12,174,8,"drawerPosition"],[166,26,174,22],[166,31,174,27],[166,37,174,4],[166,39,174,35],[167,0,177,6,"dragX"],[167,10,177,6,"dragX"],[167,15,177,11],[167,18,177,14],[167,19,177,15,"dragX"],[167,24,177,6],[168,0,178,6,"touchX"],[168,10,178,6,"touchX"],[168,16,178,12],[168,19,178,15,"containerWidth"],[168,33,178,29],[168,36,178,32,"touchX"],[168,42,178,6],[169,0,179,6,"velocityX"],[169,10,179,6,"velocityX"],[169,19,179,15],[169,22,179,18],[169,23,179,19,"velocityX"],[169,32,179,6],[170,0,180,5],[172,0,182,4],[172,12,182,10,"gestureStartX"],[172,25,182,23],[172,28,182,26,"touchX"],[172,34,182,32],[172,37,182,35,"dragX"],[172,42,182,4],[173,0,183,4],[173,12,183,8,"dragOffsetBasedOnStart"],[173,34,183,30],[173,37,183,33],[173,38,183,4],[175,0,185,4],[175,12,185,8,"drawerType"],[175,22,185,18],[175,27,185,23],[175,34,185,4],[175,36,185,32],[176,0,186,6,"dragOffsetBasedOnStart"],[176,10,186,6,"dragOffsetBasedOnStart"],[176,32,186,28],[176,35,186,31,"gestureStartX"],[176,48,186,44],[176,51,186,47,"drawerWidth"],[176,62,186,31],[176,65,186,61,"gestureStartX"],[176,78,186,74],[176,81,186,77,"drawerWidth"],[176,92,186,31],[176,95,186,91],[176,96,186,6],[177,0,187,5],[179,0,189,4],[179,12,189,10,"startOffsetX"],[179,24,189,22],[179,27,189,25,"dragX"],[179,32,189,30],[179,35,189,33,"dragOffsetBasedOnStart"],[179,57,189,25],[179,61,189,59,"drawerShown"],[179,72,189,70],[179,75,189,73,"drawerWidth"],[179,86,189,70],[179,89,189,87],[179,90,189,25],[179,91,189,4],[180,0,190,4],[180,12,190,10,"projOffsetX"],[180,23,190,21],[180,26,190,24,"startOffsetX"],[180,38,190,36],[180,41,190,39,"DRAG_TOSS"],[180,50,190,48],[180,53,190,51,"velocityX"],[180,62,190,4],[181,0,192,4],[181,12,192,10,"shouldOpen"],[181,22,192,20],[181,25,192,23,"projOffsetX"],[181,36,192,34],[181,39,192,37,"drawerWidth"],[181,50,192,48],[181,53,192,51],[181,54,192,4],[183,0,194,4],[183,12,194,8,"shouldOpen"],[183,22,194,4],[183,24,194,20],[184,0,195,6],[184,16,195,11,"_animateDrawer"],[184,30,195,6],[184,31,195,26],[185,0,196,8,"fromValue"],[185,12,196,8,"fromValue"],[185,21,196,17],[185,23,196,19,"startOffsetX"],[185,35,195,26],[186,0,197,8,"toValue"],[186,12,197,8,"toValue"],[186,19,197,15],[186,21,197,17,"drawerWidth"],[186,32,195,26],[187,0,198,8,"velocity"],[187,12,198,8,"velocity"],[187,20,198,16],[187,22,198,18,"velocityX"],[188,0,195,26],[188,11,195,6],[189,0,200,5],[189,9,194,4],[189,15,200,11],[190,0,201,6],[190,16,201,11,"_animateDrawer"],[190,30,201,6],[190,31,201,26],[191,0,202,8,"fromValue"],[191,12,202,8,"fromValue"],[191,21,202,17],[191,23,202,19,"startOffsetX"],[191,35,201,26],[192,0,203,8,"toValue"],[192,12,203,8,"toValue"],[192,19,203,15],[192,21,203,17],[192,22,201,26],[193,0,204,8,"velocity"],[193,12,204,8,"velocity"],[193,20,204,16],[193,22,204,18,"velocityX"],[194,0,201,26],[194,11,201,6],[195,0,206,5],[196,0,207,3],[196,7,45,30],[198,0,45,30],[198,12,209,2,"_animateDrawer"],[198,26,45,30],[198,29,209,19],[198,46,213,8],[199,0,213,8],[199,12,210,4,"fromValue"],[199,21,213,8],[199,30,210,4,"fromValue"],[199,39,213,8],[200,0,213,8],[200,12,211,4,"toValue"],[200,19,213,8],[200,28,211,4,"toValue"],[200,35,213,8],[201,0,213,8],[201,12,212,4,"velocity"],[201,20,213,8],[201,29,212,4,"velocity"],[201,37,213,8],[203,0,214,4],[203,14,214,9,"state"],[203,19,214,4],[203,20,214,15,"dragX"],[203,25,214,4],[203,26,214,21,"setValue"],[203,34,214,4],[203,35,214,30],[203,36,214,4],[205,0,215,4],[205,14,215,9,"state"],[205,19,215,4],[205,20,215,15,"touchX"],[205,26,215,4],[205,27,215,22,"setValue"],[205,35,215,4],[205,36,215,31],[205,42,215,36,"props"],[205,47,215,31],[205,48,215,42,"drawerPosition"],[205,62,215,31],[205,67,215,61],[205,73,215,31],[205,76,215,70],[205,77,215,31],[205,80,215,74],[205,86,215,79,"state"],[205,91,215,74],[205,92,215,85,"containerWidth"],[205,106,215,4],[207,0,217,4],[207,12,217,8],[207,19,217,15,"fromValue"],[207,28,217,8],[207,33,217,29],[207,41,217,4],[207,43,217,39],[208,0,218,6],[208,16,218,11,"state"],[208,21,218,6],[208,22,218,17,"drawerTranslation"],[208,39,218,6],[208,40,218,35,"setValue"],[208,48,218,6],[208,49,218,44,"fromValue"],[208,58,218,6],[209,0,219,5],[211,0,221,4],[211,12,221,10,"willShow"],[211,20,221,18],[211,23,221,21,"toValue"],[211,30,221,28],[211,35,221,33],[211,36,221,4],[213,0,222,4],[213,14,222,9,"setState"],[213,22,222,4],[213,23,222,18],[214,0,222,20,"drawerShown"],[214,10,222,20,"drawerShown"],[214,21,222,31],[214,23,222,33,"willShow"],[215,0,222,18],[215,9,222,4],[217,0,223,4],[217,14,223,9,"_emitStateChanged"],[217,31,223,4],[217,32,223,27,"SETTLING"],[217,40,223,4],[217,42,223,37,"willShow"],[217,50,223,4],[219,0,224,4],[219,12,224,8],[219,18,224,13,"props"],[219,23,224,8],[219,24,224,19,"hideStatusBar"],[219,37,224,4],[219,39,224,34],[220,0,225,6,"StatusBar"],[220,33,225,16,"setHidden"],[220,42,225,6],[220,43,225,26,"willShow"],[220,51,225,6],[220,53,225,36],[220,59,225,41,"props"],[220,64,225,36],[220,65,225,47,"statusBarAnimation"],[220,83,225,36],[220,87,225,69],[220,94,225,6],[221,0,226,5],[223,0,227,4,"Animated"],[223,30,227,13,"spring"],[223,36,227,4],[223,37,227,20],[223,43,227,25,"state"],[223,48,227,20],[223,49,227,31,"drawerTranslation"],[223,66,227,4],[223,68,227,50],[224,0,228,6,"velocity"],[224,10,228,6,"velocity"],[224,18,228,14],[224,20,228,6,"velocity"],[224,28,227,50],[225,0,229,6,"bounciness"],[225,10,229,6,"bounciness"],[225,20,229,16],[225,22,229,18],[225,23,227,50],[226,0,230,6,"toValue"],[226,10,230,6,"toValue"],[226,17,230,13],[226,19,230,6,"toValue"],[226,26,227,50],[227,0,231,6,"useNativeDriver"],[227,10,231,6,"useNativeDriver"],[227,25,231,21],[227,27,231,23],[227,33,231,28,"props"],[227,38,231,23],[227,39,231,34,"useNativeAnimations"],[228,0,227,50],[228,9,227,4],[228,11,232,7,"start"],[228,16,227,4],[228,17,232,13],[228,34,232,31],[229,0,232,31],[229,14,232,16,"finished"],[229,22,232,31],[229,31,232,16,"finished"],[229,39,232,31],[231,0,233,6],[231,14,233,10,"finished"],[231,22,233,6],[231,24,233,20],[232,0,234,8],[232,18,234,13,"_emitStateChanged"],[232,35,234,8],[232,36,234,31,"IDLE"],[232,40,234,8],[232,42,234,37,"willShow"],[232,50,234,8],[234,0,235,8],[234,16,235,12,"willShow"],[234,24,235,8],[234,26,235,22],[235,0,236,10],[235,20,236,15,"props"],[235,25,236,10],[235,26,236,21,"onDrawerOpen"],[235,38,236,10],[235,42,236,37],[235,48,236,42,"props"],[235,53,236,37],[235,54,236,48,"onDrawerOpen"],[235,66,236,37],[235,68,236,10],[236,0,237,9],[236,13,235,8],[236,19,237,15],[237,0,238,10],[237,20,238,15,"props"],[237,25,238,10],[237,26,238,21,"onDrawerClose"],[237,39,238,10],[237,43,238,38],[237,49,238,43,"props"],[237,54,238,38],[237,55,238,49,"onDrawerClose"],[237,68,238,38],[237,70,238,10],[238,0,239,9],[239,0,240,7],[240,0,241,5],[240,9,227,4],[241,0,242,3],[241,7,45,30],[243,0,45,30],[243,12,244,2,"openDrawer"],[243,22,45,30],[243,25,244,15],[243,37,244,33],[244,0,244,33],[244,12,244,16,"options"],[244,19,244,33],[244,90,244,26],[244,92,244,33],[246,0,245,4],[246,14,245,9,"_animateDrawer"],[246,28,245,4],[246,29,245,24],[247,0,246,6,"toValue"],[247,10,246,6,"toValue"],[247,17,246,13],[247,19,246,15],[247,25,246,20,"props"],[247,30,246,15],[247,31,246,26,"drawerWidth"],[247,42,245,24],[248,0,247,6,"velocity"],[248,10,247,6,"velocity"],[248,18,247,14],[248,20,247,16,"options"],[248,27,247,23],[248,28,247,24,"velocity"],[248,36,247,16],[248,39,247,35,"options"],[248,46,247,42],[248,47,247,43,"velocity"],[248,55,247,16],[248,58,247,54],[249,0,245,24],[249,9,245,4],[250,0,249,3],[250,7,45,30],[252,0,45,30],[252,12,251,2,"closeDrawer"],[252,23,45,30],[252,26,251,16],[252,38,251,34],[253,0,251,34],[253,12,251,17,"options"],[253,19,251,34],[253,90,251,27],[253,92,251,34],[255,0,252,4],[255,14,252,9,"_animateDrawer"],[255,28,252,4],[255,29,252,24],[256,0,253,6,"toValue"],[256,10,253,6,"toValue"],[256,17,253,13],[256,19,253,15],[256,20,252,24],[257,0,254,6,"velocity"],[257,10,254,6,"velocity"],[257,18,254,14],[257,20,254,16,"options"],[257,27,254,23],[257,28,254,24,"velocity"],[257,36,254,16],[257,39,254,35,"options"],[257,46,254,42],[257,47,254,43,"velocity"],[257,55,254,16],[257,58,254,54],[258,0,252,24],[258,9,252,4],[259,0,256,3],[259,7,45,30],[261,0,45,30],[261,12,258,2,"_renderOverlay"],[261,26,45,30],[261,29,258,19],[261,41,258,25],[262,0,260,4],[262,32,260,14],[262,38,260,19,"_openValue"],[262,48,260,4],[262,50,260,31],[262,65,260,4],[264,0,261,4],[264,12,261,10,"overlayOpacity"],[264,26,261,24],[264,29,261,27],[264,35,261,32,"_openValue"],[264,45,261,27],[264,46,261,43,"interpolate"],[264,57,261,27],[264,58,261,55],[265,0,262,6,"inputRange"],[265,10,262,6,"inputRange"],[265,20,262,16],[265,22,262,18],[265,23,262,19],[265,24,262,18],[265,26,262,22],[265,27,262,18],[265,28,261,55],[266,0,263,6,"outputRange"],[266,10,263,6,"outputRange"],[266,21,263,17],[266,23,263,19],[266,24,263,20],[266,25,263,19],[266,27,263,23],[266,30,263,19],[266,31,261,55],[267,0,264,6,"extrapolate"],[267,10,264,6,"extrapolate"],[267,21,264,17],[267,23,264,19],[268,0,261,55],[268,9,261,27],[268,10,261,4],[270,0,266,4],[270,12,266,10,"dynamicOverlayStyles"],[270,32,266,30],[270,35,266,33],[271,0,267,6,"opacity"],[271,10,267,6,"opacity"],[271,17,267,13],[271,19,267,15,"overlayOpacity"],[271,33,266,33],[272,0,268,6,"backgroundColor"],[272,10,268,6,"backgroundColor"],[272,25,268,21],[272,27,268,23],[272,33,268,28,"props"],[272,38,268,23],[272,39,268,34,"overlayColor"],[273,0,266,33],[273,9,266,4],[274,0,270,4],[274,15,270,11],[274,44,270,12],[274,88,270,11],[275,0,270,30],[275,10,270,30],[275,30,270,50],[275,32,270,52],[275,38,270,57,"_onTapHandlerStateChange"],[275,62,270,11],[276,0,270,11],[277,0,270,11],[278,0,270,11],[279,0,270,11],[280,0,270,11],[280,11,271,8],[280,40,271,9],[280,61,271,8],[280,62,271,18],[280,66,271,8],[281,0,271,23],[281,10,271,23],[281,23,271,36],[281,25,271,38],[281,31,271,43,"state"],[281,36,271,38],[281,37,271,49,"drawerShown"],[281,48,271,38],[281,51,271,63],[281,57,271,38],[281,60,271,72],[281,66,271,8],[282,0,271,80],[282,10,271,80],[282,15,271,85],[282,17,271,87],[282,18,271,88,"styles"],[282,24,271,94],[282,25,271,95,"overlay"],[282,32,271,87],[282,34,271,104,"dynamicOverlayStyles"],[282,54,271,87],[282,55,271,8],[283,0,271,8],[284,0,271,8],[285,0,271,8],[286,0,271,8],[287,0,271,8],[287,10,270,11],[287,11,270,4],[288,0,273,3],[288,7,45,30],[290,0,45,30],[290,12,275,2,"_renderDrawer"],[290,25,45,30],[290,28,275,18],[290,40,275,24],[291,0,275,24],[291,12,276,12,"drawerShown"],[291,23,275,24],[291,26,276,28],[291,32,276,33,"state"],[291,37,275,24],[291,38,276,12,"drawerShown"],[291,49,275,24],[292,0,275,24],[292,27,283,8],[292,33,283,13,"props"],[292,38,275,24],[293,0,275,24],[293,12,278,6,"drawerBackgroundColor"],[293,33,275,24],[293,49,278,6,"drawerBackgroundColor"],[293,70,275,24],[294,0,275,24],[294,12,279,6,"drawerWidth"],[294,23,275,24],[294,39,279,6,"drawerWidth"],[294,50,275,24],[295,0,275,24],[295,12,280,6,"drawerPosition"],[295,26,275,24],[295,42,280,6,"drawerPosition"],[295,56,275,24],[296,0,275,24],[296,12,281,6,"drawerType"],[296,22,275,24],[296,38,281,6,"drawerType"],[296,48,275,24],[297,0,275,24],[297,12,282,6,"contentContainerStyle"],[297,33,275,24],[297,49,282,6,"contentContainerStyle"],[297,70,275,24],[298,0,285,4],[298,12,285,10,"fromLeft"],[298,20,285,18],[298,23,285,21,"drawerPosition"],[298,37,285,35],[298,42,285,40],[298,48,285,4],[299,0,286,4],[299,12,286,10,"drawerSlide"],[299,23,286,21],[299,26,286,24,"drawerType"],[299,36,286,34],[299,41,286,39],[299,47,286,4],[300,0,287,4],[300,12,287,10,"containerSlide"],[300,26,287,24],[300,29,287,27,"drawerType"],[300,39,287,37],[300,44,287,42],[300,51,287,4],[301,0,289,4],[301,12,289,10,"dynamicDrawerStyles"],[301,31,289,29],[301,34,289,32],[302,0,290,6,"backgroundColor"],[302,10,290,6,"backgroundColor"],[302,25,290,21],[302,27,290,23,"drawerBackgroundColor"],[302,48,289,32],[303,0,291,6,"width"],[303,10,291,6,"width"],[303,15,291,11],[303,17,291,13,"drawerWidth"],[304,0,289,32],[304,9,289,4],[305,0,293,4],[305,12,293,10,"openValue"],[305,21,293,19],[305,24,293,22],[305,30,293,27,"_openValue"],[305,40,293,4],[306,0,294,4],[306,32,294,14,"openValue"],[306,41,294,4],[306,43,294,25],[306,58,294,4],[307,0,296,4],[307,12,296,8,"containerStyles"],[307,27,296,4],[309,0,297,4],[309,12,297,8,"containerSlide"],[309,26,297,4],[309,28,297,24],[310,0,298,6],[310,14,298,12,"containerTranslateX"],[310,33,298,31],[310,36,298,34,"openValue"],[310,45,298,43],[310,46,298,44,"interpolate"],[310,57,298,34],[310,58,298,56],[311,0,299,8,"inputRange"],[311,12,299,8,"inputRange"],[311,22,299,18],[311,24,299,20],[311,25,299,21],[311,26,299,20],[311,28,299,24],[311,29,299,20],[311,30,298,56],[312,0,300,8,"outputRange"],[312,12,300,8,"outputRange"],[312,23,300,19],[312,25,300,21,"fromLeft"],[312,33,300,29],[312,36,300,32],[312,37,300,33],[312,38,300,32],[312,40,300,36,"drawerWidth"],[312,51,300,32],[312,52,300,29],[312,55,300,51],[312,56,300,52],[312,57,300,51],[312,59,300,55],[312,60,300,56,"drawerWidth"],[312,71,300,51],[312,72,298,56],[313,0,301,8,"extrapolate"],[313,12,301,8,"extrapolate"],[313,23,301,19],[313,25,301,21],[314,0,298,56],[314,11,298,34],[314,12,298,6],[315,0,303,6,"containerStyles"],[315,10,303,6,"containerStyles"],[315,25,303,21],[315,28,303,24],[316,0,304,8,"transform"],[316,12,304,8,"transform"],[316,21,304,17],[316,23,304,19],[316,24,304,20],[317,0,304,22,"translateX"],[317,14,304,22,"translateX"],[317,24,304,32],[317,26,304,34,"containerTranslateX"],[318,0,304,20],[318,13,304,19],[319,0,303,24],[319,11,303,6],[320,0,306,5],[322,0,308,4],[322,12,308,8,"drawerTranslateX"],[322,28,308,24],[322,31,308,27],[322,32,308,4],[324,0,309,4],[324,12,309,8,"drawerSlide"],[324,23,309,4],[324,25,309,21],[325,0,310,6],[325,14,310,12,"closedDrawerOffset"],[325,32,310,30],[325,35,310,33,"fromLeft"],[325,43,310,41],[325,46,310,44],[325,47,310,45,"drawerWidth"],[325,58,310,41],[325,61,310,59,"drawerWidth"],[325,72,310,6],[326,0,311,6,"drawerTranslateX"],[326,10,311,6,"drawerTranslateX"],[326,26,311,22],[326,29,311,25,"openValue"],[326,38,311,34],[326,39,311,35,"interpolate"],[326,50,311,25],[326,51,311,47],[327,0,312,8,"inputRange"],[327,12,312,8,"inputRange"],[327,22,312,18],[327,24,312,20],[327,25,312,21],[327,26,312,20],[327,28,312,24],[327,29,312,20],[327,30,311,47],[328,0,313,8,"outputRange"],[328,12,313,8,"outputRange"],[328,23,313,19],[328,25,313,21],[328,26,313,22,"closedDrawerOffset"],[328,44,313,21],[328,46,313,42],[328,47,313,21],[328,48,311,47],[329,0,314,8,"extrapolate"],[329,12,314,8,"extrapolate"],[329,23,314,19],[329,25,314,21],[330,0,311,47],[330,11,311,25],[330,12,311,6],[331,0,316,5],[333,0,317,4],[333,12,317,10,"drawerStyles"],[333,24,317,22],[333,27,317,25],[334,0,318,6,"transform"],[334,10,318,6,"transform"],[334,19,318,15],[334,21,318,17],[334,22,318,18],[335,0,318,20,"translateX"],[335,12,318,20,"translateX"],[335,22,318,30],[335,24,318,32,"drawerTranslateX"],[336,0,318,18],[336,11,318,17],[336,12,317,25],[337,0,319,6,"flexDirection"],[337,10,319,6,"flexDirection"],[337,23,319,19],[337,25,319,21],[337,26,319,22,"I18nManager"],[337,51,319,34,"isRTL"],[337,56,319,22],[337,59,319,42],[337,60,319,43,"fromLeft"],[337,68,319,22],[337,71,319,54,"fromLeft"],[337,79,319,21],[337,83,319,66],[337,88,319,21],[337,91,319,74],[338,0,317,25],[338,9,317,4],[339,0,322,4],[339,15,322,11],[339,44,322,12],[339,65,322,11],[339,66,322,21],[339,70,322,11],[340,0,322,26],[340,10,322,26],[340,15,322,31],[340,17,322,33,"styles"],[340,23,322,39],[340,24,322,40,"main"],[340,28,322,11],[341,0,322,46],[341,10,322,46],[341,18,322,54],[341,20,322,56],[341,26,322,61,"_handleContainerLayout"],[341,48,322,11],[342,0,322,11],[343,0,322,11],[344,0,322,11],[345,0,322,11],[346,0,322,11],[346,11,323,8],[346,40,323,9],[346,61,323,8],[346,62,323,18],[346,66,323,8],[347,0,323,23],[347,10,323,23],[347,15,323,28],[347,17,323,30],[347,18,323,31,"drawerType"],[347,28,323,41],[347,33,323,46],[347,40,323,31],[347,43,323,56,"styles"],[347,49,323,62],[347,50,323,63,"containerOnBack"],[347,65,323,31],[347,68,323,81,"styles"],[347,74,323,87],[347,75,323,88,"containerInFront"],[347,91,323,30],[347,93,323,106,"containerStyles"],[347,108,323,30],[347,110,323,123,"contentContainerStyle"],[347,131,323,30],[347,132,323,8],[348,0,323,8],[349,0,323,8],[350,0,323,8],[351,0,323,8],[352,0,323,8],[352,11,324,11],[352,18,324,18],[352,24,324,23,"props"],[352,29,324,18],[352,30,324,29,"children"],[352,38,324,11],[352,43,324,42],[352,53,324,11],[352,56,324,55],[352,62,324,60,"props"],[352,67,324,55],[352,68,324,66,"children"],[352,76,324,55],[352,77,324,75],[352,83,324,80,"_openValue"],[352,93,324,55],[352,94,324,11],[352,97,324,94],[352,103,324,99,"props"],[352,108,324,94],[352,109,324,105,"children"],[352,117,323,8],[352,119,325,11],[352,125,325,16,"_renderOverlay"],[352,139,325,11],[352,141,323,8],[352,142,322,11],[352,144,327,8],[352,173,327,9],[352,194,327,8],[352,195,327,18],[352,199,327,8],[353,0,327,23],[353,10,327,23],[353,23,327,36],[353,25,327,37],[353,35,327,8],[354,0,327,48],[354,10,327,48],[354,34,327,72],[354,36,327,74,"drawerShown"],[354,47,327,8],[355,0,327,87],[355,10,327,87],[355,15,327,92],[355,17,327,94],[355,18,327,95,"styles"],[355,24,327,101],[355,25,327,102,"drawerContainer"],[355,40,327,94],[355,42,327,119,"drawerStyles"],[355,54,327,94],[355,55,327,8],[356,0,327,8],[357,0,327,8],[358,0,327,8],[359,0,327,8],[360,0,327,8],[360,11,328,10],[360,40,328,11],[360,57,328,10],[361,0,328,16],[361,10,328,16],[361,15,328,21],[361,17,328,23],[361,18,328,24,"styles"],[361,24,328,30],[361,25,328,31,"drawer"],[361,31,328,23],[361,33,328,39,"dynamicDrawerStyles"],[361,52,328,23],[361,53,328,10],[362,0,328,10],[363,0,328,10],[364,0,328,10],[365,0,328,10],[366,0,328,10],[366,11,329,13],[366,17,329,18,"props"],[366,22,329,13],[366,23,329,24,"renderNavigationView"],[366,43,329,13],[366,44,329,45],[366,50,329,50,"_openValue"],[366,60,329,13],[366,61,328,10],[366,62,327,8],[366,63,322,11],[366,64,322,4],[367,0,333,3],[367,7,45,30],[369,0,48,4],[369,10,48,10,"dragX"],[369,16,48,15],[369,19,48,18],[369,23,48,22,"Animated"],[369,45,48,31,"Value"],[369,50,48,18],[369,51,48,37],[369,52,48,18],[369,53,48,4],[371,0,49,4],[371,10,49,10,"touchX"],[371,17,49,16],[371,20,49,19],[371,24,49,23,"Animated"],[371,46,49,32,"Value"],[371,51,49,19],[371,52,49,38],[371,53,49,19],[371,54,49,4],[373,0,50,4],[373,10,50,10,"drawerTranslation"],[373,28,50,27],[373,31,50,30],[373,35,50,34,"Animated"],[373,57,50,43,"Value"],[373,62,50,30],[373,63,50,49],[373,64,50,30],[373,65,50,4],[375,0,52,4],[375,12,52,9,"state"],[375,17,52,4],[375,20,52,17],[376,0,53,6,"dragX"],[376,8,53,6,"dragX"],[376,13,53,11],[376,15,53,6,"dragX"],[376,21,52,17],[377,0,54,6,"touchX"],[377,8,54,6,"touchX"],[377,14,54,12],[377,16,54,6,"touchX"],[377,23,52,17],[378,0,55,6,"drawerTranslation"],[378,8,55,6,"drawerTranslation"],[378,25,55,23],[378,27,55,6,"drawerTranslation"],[378,45,52,17],[379,0,56,6,"drawerShown"],[379,8,56,6,"drawerShown"],[379,19,56,17],[379,21,56,19],[379,26,52,17],[380,0,57,6,"containerWidth"],[380,8,57,6,"containerWidth"],[380,22,57,20],[380,24,57,22],[381,0,52,17],[381,7,52,4],[383,0,60,4],[383,12,60,9,"_updateAnimatedEvent"],[383,32,60,4],[383,33,60,30,"props"],[383,39,60,4],[383,41,60,37],[383,47,60,42,"state"],[383,52,60,4],[385,0,45,30],[386,0,61,3],[390,42,63,22,"props"],[390,47],[390,49,63,29,"state"],[390,54],[390,56,63,36],[391,0,64,4],[391,12,64,8],[391,17,64,13,"props"],[391,22,64,8],[391,23,64,19,"drawerPosition"],[391,37,64,8],[391,42,64,38,"props"],[391,47,64,43],[391,48,64,44,"drawerPosition"],[391,62,64,8],[391,66,64,62],[391,71,64,67,"props"],[391,76,64,62],[391,77,64,73,"drawerWidth"],[391,88,64,62],[391,93,64,89,"props"],[391,98,64,94],[391,99,64,95,"drawerWidth"],[391,110,64,8],[391,114,64,110],[391,119,64,115,"props"],[391,124,64,110],[391,125,64,121,"drawerType"],[391,135,64,110],[391,140,64,136,"props"],[391,145,64,141],[391,146,64,142,"drawerType"],[391,156,64,8],[391,160,64,156],[391,165,64,161,"state"],[391,170,64,156],[391,171,64,167,"containerWidth"],[391,185,64,156],[391,190,64,186,"state"],[391,195,64,191],[391,196,64,192,"containerWidth"],[391,210,64,4],[391,212,64,208],[392,0,65,6],[392,15,65,11,"_updateAnimatedEvent"],[392,35,65,6],[392,36,65,32,"props"],[392,41,65,6],[392,43,65,39,"state"],[392,48,65,6],[393,0,66,5],[394,0,67,3],[397,31,335,11],[398,0,335,11],[398,27,336,44],[398,32,336,49,"state"],[398,37,335,11],[399,0,335,11],[399,12,336,12,"drawerShown"],[399,23,335,11],[399,39,336,12,"drawerShown"],[399,50,335,11],[400,0,335,11],[400,12,336,25,"containerWidth"],[400,26,335,11],[400,42,336,25,"containerWidth"],[400,56,335,11],[401,0,335,11],[401,27,344,8],[401,32,344,13,"props"],[401,37,335,11],[402,0,335,11],[402,12,339,6,"drawerPosition"],[402,26,335,11],[402,42,339,6,"drawerPosition"],[402,56,335,11],[403,0,335,11],[403,12,340,6,"drawerType"],[403,22,335,11],[403,38,340,6,"drawerType"],[403,48,335,11],[404,0,335,11],[404,12,341,6,"drawerLockMode"],[404,26,335,11],[404,42,341,6,"drawerLockMode"],[404,56,335,11],[405,0,335,11],[405,12,342,6,"edgeWidth"],[405,21,335,11],[405,37,342,6,"edgeWidth"],[405,46,335,11],[406,0,335,11],[406,12,343,6,"minSwipeDistance"],[406,28,335,11],[406,44,343,6,"minSwipeDistance"],[406,60,335,11],[407,0,346,4],[407,12,346,10,"fromLeft"],[407,20,346,18],[407,23,346,21,"drawerPosition"],[407,37,346,35],[407,42,346,40],[407,48,346,4],[408,0,351,4],[408,12,351,10,"gestureOrientation"],[408,30,351,28],[408,33,351,31],[408,34,351,32,"fromLeft"],[408,42,351,40],[408,45,351,43],[408,46,351,40],[408,49,351,47],[408,50,351,48],[408,51,351,31],[408,56,351,54,"drawerShown"],[408,67,351,65],[408,70,351,68],[408,71,351,69],[408,72,351,65],[408,75,351,73],[408,76,351,31],[408,77,351,4],[409,0,356,4],[409,12,356,10,"hitSlop"],[409,19,356,17],[409,22,356,20,"fromLeft"],[409,30,356,28],[409,33,356,31],[410,0,356,33,"right"],[410,10,356,33,"right"],[410,15,356,38],[410,17,356,40,"drawerShown"],[410,28,356,51],[410,31,356,54],[410,32,356,51],[410,35,356,58,"edgeWidth"],[410,44,356,67],[410,47,356,70,"containerWidth"],[411,0,356,31],[411,9,356,28],[411,12,356,89],[412,0,356,91,"left"],[412,10,356,91,"left"],[412,14,356,95],[412,16,356,97,"drawerShown"],[412,27,356,108],[412,30,356,111],[412,31,356,108],[412,34,356,115,"edgeWidth"],[412,43,356,124],[412,46,356,127,"containerWidth"],[413,0,356,89],[413,9,356,4],[414,0,358,4],[414,15,358,11],[414,44,358,12],[414,88,358,11],[415,0,358,30],[415,10,358,30],[415,17,358,37],[415,19,358,39,"hitSlop"],[415,26,358,11],[416,0,358,48],[416,10,358,48],[416,20,358,58],[416,22,358,60,"gestureOrientation"],[416,40,358,78],[416,43,358,81,"minSwipeDistance"],[416,59,358,11],[417,0,358,99],[417,10,358,99],[417,19,358,108],[417,21,358,110],[417,23,358,11],[418,0,358,114],[418,10,358,114],[418,24,358,128],[418,26,358,130],[418,31,358,135,"_onGestureEvent"],[418,46,358,11],[419,0,358,152],[419,10,358,152],[419,17,358,159],[419,19,358,161,"drawerLockMode"],[419,33,358,175],[419,38,358,180],[419,53,358,161],[419,57,358,199,"drawerLockMode"],[419,71,358,213],[419,76,358,218],[419,89,358,11],[420,0,358,233],[420,10,358,233],[420,30,358,253],[420,32,358,255],[420,37,358,260,"_openingHandlerStateChange"],[420,63,358,11],[421,0,358,288],[421,10,358,288],[421,13,358,291],[421,15,358,293],[421,20,358,298,"props"],[421,25,358,293],[421,26,358,304,"gestureRef"],[421,36,358,11],[422,0,358,11],[423,0,358,11],[424,0,358,11],[425,0,358,11],[426,0,358,11],[426,11,359,9],[426,16,359,14,"_renderDrawer"],[426,29,359,9],[426,31,358,11],[426,32,358,4],[427,0,361,3],[430,4,27,42,"Component"],[430,20],[430,30,28,9,"defaultProps"],[430,42],[430,45,28,24],[431,0,29,4,"drawerWidth"],[431,4,29,4,"drawerWidth"],[431,15,29,15],[431,17,29,17],[431,20,28,24],[432,0,30,4,"drawerPosition"],[432,4,30,4,"drawerPosition"],[432,18,30,18],[432,20,30,20],[432,26,28,24],[433,0,31,4,"useNativeAnimations"],[433,4,31,4,"useNativeAnimations"],[433,23,31,23],[433,25,31,25],[433,29,28,24],[434,0,32,4,"drawerType"],[434,4,32,4,"drawerType"],[434,14,32,14],[434,16,32,16],[434,23,28,24],[435,0,33,4,"edgeWidth"],[435,4,33,4,"edgeWidth"],[435,13,33,13],[435,15,33,15],[435,17,28,24],[436,0,34,4,"minSwipeDistance"],[436,4,34,4,"minSwipeDistance"],[436,20,34,20],[436,22,34,22],[436,23,28,24],[437,0,35,4,"overlayColor"],[437,4,35,4,"overlayColor"],[437,16,35,16],[437,18,35,18],[437,25,28,24],[438,0,36,4,"drawerLockMode"],[438,4,36,4,"drawerLockMode"],[438,18,36,18],[438,20,36,20],[439,0,28,24],[439,3],[439,12,39,9,"positions"],[439,21],[439,24,39,21],[440,0,40,4,"Left"],[440,4,40,4,"Left"],[440,8,40,8],[440,10,40,10],[440,16,39,21],[441,0,41,4,"Right"],[441,4,41,4,"Right"],[441,9,41,9],[441,11,41,11],[442,0,39,21],[442,3],[447,0,364,0],[447,6,364,6,"styles"],[447,12,364,12],[447,15,364,15,"StyleSheet"],[447,39,364,26,"create"],[447,45,364,15],[447,46,364,33],[448,0,365,2,"drawer"],[448,4,365,2,"drawer"],[448,10,365,8],[448,12,365,10],[449,0,365,12,"flex"],[449,6,365,12,"flex"],[449,10,365,16],[449,12,365,18],[450,0,365,10],[450,5,364,33],[451,0,366,2,"drawerContainer"],[451,4,366,2,"drawerContainer"],[451,19,366,17],[451,53,367,7,"StyleSheet"],[451,77,367,18,"absoluteFillObject"],[451,95,366,17],[452,0,368,4,"zIndex"],[452,6,368,4,"zIndex"],[452,12,368,10],[452,14,368,12],[452,18,366,17],[453,0,369,4,"flexDirection"],[453,6,369,4,"flexDirection"],[453,19,369,17],[453,21,369,19],[454,0,366,17],[454,6,364,33],[455,0,371,2,"containerInFront"],[455,4,371,2,"containerInFront"],[455,20,371,18],[455,54,372,7,"StyleSheet"],[455,78,372,18,"absoluteFillObject"],[455,96,371,18],[456,0,373,4,"zIndex"],[456,6,373,4,"zIndex"],[456,12,373,10],[456,14,373,12],[457,0,371,18],[457,6,364,33],[458,0,375,2,"containerOnBack"],[458,4,375,2,"containerOnBack"],[458,19,375,17],[458,53,376,7,"StyleSheet"],[458,77,376,18,"absoluteFillObject"],[458,95,375,17],[458,96,364,33],[459,0,378,2,"main"],[459,4,378,2,"main"],[459,8,378,6],[459,10,378,8],[460,0,379,4,"flex"],[460,6,379,4,"flex"],[460,10,379,8],[460,12,379,10],[460,13,378,8],[461,0,380,4,"zIndex"],[461,6,380,4,"zIndex"],[461,12,380,10],[461,14,380,12],[461,15,378,8],[462,0,381,4,"overflow"],[462,6,381,4,"overflow"],[462,14,381,12],[462,16,381,14],[463,0,378,8],[463,5,364,33],[464,0,383,2,"overlay"],[464,4,383,2,"overlay"],[464,11,383,9],[464,45,384,7,"StyleSheet"],[464,69,384,18,"absoluteFillObject"],[464,87,383,9],[465,0,385,4,"zIndex"],[465,6,385,4,"zIndex"],[465,12,385,10],[465,14,385,12],[466,0,383,9],[467,0,364,33],[467,3,364,15],[467,4,364,0]]},"type":"js/module"}]}